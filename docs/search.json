[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre",
    "section": "",
    "text": "Doutor em Geociências pela University of Aberdeen e Universidade Federal do Rio Grande do Sul em regime de dupla titulação com período no exterior (Co-tutela) (2015-2020), como bolsista SWE CNPq. Realizou pós-doutorado na UFRGS (2021) como bolsista Capes Print, pós-doutorado na UFRGS (2022) como bolsista Petrobrás e pós-doutorado na UFRGS (2023) como bolsista PRH-14 da ANP. Possui graduação em Geologia pela Universidade do Vale do Rio dos Sinos (UNISINOS) (2010-2014) com período sanduíche na Universidad de Alicante (Espanha) como bolsista CNPq (2012-2013). Possui experiência em técnicas multiproxy (geocronologia U-Pb em zircão detrítico, minerais pesados, sedimentologia aplicada) e em tratamento estatístico aplicado a proveniência sedimentar através de programação. Além disso, tem interesse na caracterização de reservatórios vulcanossedimentares, através de petrofísica, estudos diagenéticos e modelamento geológico. Atualmente, é pesquisador junto ao ITT OCEANEON da Unisinos como bolsista CNPq DTI-B no projeto “Rochas geradoras de hidrocarbonetos na Bacia Sergipe-Alagoas: caracterização multi-proxy, correlação com eventos anóxicos oceânicos (OAEs) e suas implicações na caracterização de sistemas petrolíferos”."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gabriel Bertolini",
    "section": "",
    "text": "Gabriel Bertolini é pesquisador na Universidade do Vale do Rio dos Sinos, junto ao ITT Oceaneon. Atua na área de sedimentologia, com enfâse em petrologia sedimentar, geocronologia, petrofisica e análise de dados."
  },
  {
    "objectID": "index.html#educação",
    "href": "index.html#educação",
    "title": "Gabriel Bertolini",
    "section": "Educação",
    "text": "Educação\nUniversity of Aberdeen | Escócia | UK\nUniversidade Federal do Rio Grande do Sul | Brasil |\nPhD com dupla titulação em Geocências | Out 2015 - Mar 2020\nUniversidade do Vale do Rio dos Sinos, São Leopoldo | Brasil |\nGraduação em Geologia | Mar 2010 - Jan 2015"
  },
  {
    "objectID": "index.html#experiência",
    "href": "index.html#experiência",
    "title": "Gabriel Bertolini",
    "section": "Experiência",
    "text": "Experiência\nPesquisador de pós-doutorado (2021)| Universidade Federal do Rio Grande do Sul Bolsista CAPES PrInt\nPesquisador de pós-doutorado (2022)| Universidade Federal do Rio Grande do Sul Bolsista Petrobrás\nPesquisador de pós-doutorado (2023)| Universidade Federal do Rio Grande do Sul Bolsista ANP (Agência Nacional do Petróleo)"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publicações",
    "section": "",
    "text": "Publicações\nLink para download de artigos\nBERTOLINI, G.; HARTLEY, A.J. ; MARQUES, J.C. ; PAIM, J.C. . Controls on grain-size distribution in an ancient sand sea. SEDIMENTOLOGY, v. 71, p. 1, 2023.\nSCHERER, CLAITON M.S. ; REIS, ADRIANO D. ; HORN, BRUNO L.D. ; BERTOLINI, GABRIEL ; LAVINA, ERNESTO L.C. ; KIFUMBI, CARREL ; GOSO AGUILAR, CESAR . The stratigraphic puzzle of the permo-mesozoic southwestern Gondwana: The Paraná Basin record in geotectonic and palaeoclimatic context. EARTH-SCIENCE REVIEWS, v. 240, p. 104397, 2023.\nSCHERER, CLAITON M.S. ; REIS, ADRIANO D. ; HORN, BRUNO L.D. ; BERTOLINI, GABRIEL ; LAVINA, ERNESTO L.C. ; KIFUMBI, CARREL ; GOSO, CESAR . Corrigendum to -The stratigraphic puzzle of the permo-mesozoic southwestern Gondwana: The Paraná Basin record in geotectonic and palaeoclimatic context- [Earth-Science Reviews 240 (2023) 104397]. EARTH-SCIENCE REVIEWS, v. 243, p. 104505, 2023.\nPADILHA, N. L. ; BERTOLINI, G. ; MARQUES, J. C. ; GOES, A. M. ; NOGUEIRA, A. C. R. ; MEDEIROS, R. S. P. ; ANDRADE, L. S. ; SODRE, A. A. N. ; CANARIM, D. M. ; SOUZA, P. A. ; SCOMAZZON, A. K. ; OLIVEIRA, E. J. ; SANTOS, J. M. M. . Zircão, o Guardião do Tempo: Datação U-Pb aplicada a provêniencia sedimentar- revisão metodológica e utilidade no projeto Biocronorte. Revista da Academia de Ciências do Piauí, v. 3, p. 157, 2022.\nARAUJO, V. ; MARQUES, J. C. ; BERTOLINI, G. ; FRANTZ, J. C. . U-Pb zircon xenocrysts dating as a proxy to assess volcanic assimilation and the underlying crust, Cretaceous Jaguarão Formation, RS-Brazil. Brazilian Journal of Geology, v. 52, p. 1-16, 2022.\nJoão Rodrigo Pilla Dias ; MARQUES, J. C. ; BERTOLINI, G. ; FRANTZ, JOSÉ C. ; FRIEDRICH, B. M. ; Carlos José Sobrinho da Silveira ; QUEIROZ, W. ; PAIM, J. C. S. . Regional high-grade metamorphic peak imprint in zircons from the mafic-ultramafic Jacurici Complex, São Francisco Craton, Brazil. BRAZILIAN JOURNAL OF GEOLOGY, v. 52, p. 1-14, 2022.\nBERTOLINI, GABRIEL; MARQUES, JULIANA ; HARTLEY, ADRIAN J. ; BASEI, M. A. S. ; FRANTZ, JOSÉ C. ; SANTOS, P. R. . DETERMINING SEDIMENT PROVENANCE HISTORY IN A GONDWANAN ERG: BOTUCATU FORMATION, NORTHERN PARANÁ BASIN, BRAZIL. SEDIMENTARY GEOLOGY, p. 105883, 2021.\nJoão Rodrigo Pilla Dias ; BERTOLINI, G. ; MARQUES, J. C. ; FRANTZ, J. C. ; Carlos José Sobrinho da Silveira ; CEZARIO, N. . Análise prospectiva de corpos máficos-ultramáficos através de aerogeofísica: Caso de estudo no Vale do Jacurici/Bahia. REVISTA DE GEOCIÊNCIAS DO NORDESTE, v. 7, p. 271-281, 2021.\nYU, X. ; WANG, C. ; BERTOLINI, G. ; LIU, C. ; WANG, J. . Damp- to dry aeolian systems: Sedimentology, climate forcing, and aeolian accumulation in the Late Cretaceous Liyou Basin, South China. SEDIMENTARY GEOLOGY, v. 426, p. 106030, 2021.\nBERTOLINI, GABRIEL; MARQUES, JULIANA ; HARTLEY, ADRIAN J. ; DAROSA, ATILA A.S. ; S.SCHERER, CLAITON M. ; BASEI, MIGUEL A.S. ; FRANTZ, JOSÉ C. . Controls on Early Cretaceous desert sediment provenance in south-west Gondwana, Botucatu Formation (Brazil and Uruguay). SEDIMENTOLOGY, p. sed.12715, 2020.\nBERTOLINI, G.; HARTLEY, A. J. ; MARQUES, J. C. ; HEALY, D. ; FRANTZ, J. C. . The effects of basaltic lava flows on the petrophysical properties and diagenesis of interbedded aeolian sandstones: an example from the Cretaceous Paraná Basin, Brazil. PETROLEUM GEOSCIENCE, p. petgeo2020-036, 2020."
  },
  {
    "objectID": "lista.html",
    "href": "lista.html",
    "title": "Conteúdo didático",
    "section": "",
    "text": "Materiais de aula\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "aula_2.html",
    "href": "aula_2.html",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "",
    "text": "Dr. Gabriel Bertolini\n2º semestre 2023 - PPGGEO UFRGS\nOficina de programação\nAula introdutória sobre tidyverse."
  },
  {
    "objectID": "aula_2.html#alterando-a-forma-do-dataframe-com-pivot_longer-e-_wider",
    "href": "aula_2.html#alterando-a-forma-do-dataframe-com-pivot_longer-e-_wider",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "Alterando a forma do dataframe com pivot_longer e _wider()",
    "text": "Alterando a forma do dataframe com pivot_longer e _wider()\n\n# Dado longo\nBD %&gt;% \n  select(X,Tectonic_setting,SiO2:MgO) %&gt;% \n  group_by(Tectonic_setting) %&gt;%  # Agrupa os valores por grupos baseados nos tipos tectonicos, ou seja, qualquer ação será realizada em diferentes \"compartimentos\" de dados- isso pode ser muito util para médias globais e de grupo.\n  mutate(across(SiO2:MgO,~ifelse(.x==0, mean(.x),.x)),  # substituir 0 por média por grupo (1 para cada valor de tectonic setting diferente) \n         across(SiO2:MgO,~round(.x,digits=2))) %&gt;% \n  reframe(n=n(),\n          across(.cols=SiO2:MgO,~round(mean(.x,na.rm = TRUE),2))) %&gt;%\n  pivot_longer(cols=SiO2:MgO)\n\n# A tibble: 54 × 4\n   Tectonic_setting             n name  value\n   &lt;chr&gt;                    &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;\n 1 ARCHAEAN CRATONS           310 SiO2  69.6 \n 2 ARCHAEAN CRATONS           310 TiO2   0.31\n 3 ARCHAEAN CRATONS           310 Al2O3 15.4 \n 4 ARCHAEAN CRATONS           310 FeOt   2.43\n 5 ARCHAEAN CRATONS           310 MnO    0.04\n 6 ARCHAEAN CRATONS           310 MgO    1.33\n 7 CONTINENTAL FLOOD BASALT   191 SiO2  67.5 \n 8 CONTINENTAL FLOOD BASALT   191 TiO2   0.53\n 9 CONTINENTAL FLOOD BASALT   191 Al2O3 14.6 \n10 CONTINENTAL FLOOD BASALT   191 FeOt   4.21\n# ℹ 44 more rows\n\n#dado largo\nBD %&gt;% \n  select(X,Tectonic_setting,SiO2:MgO) %&gt;% \n  group_by(Tectonic_setting) %&gt;%  # Agrupa os valores por grupos baseados nos tipos tectonicos, ou seja, qualquer ação será realizada em diferentes \"compartimentos\" de dados- isso pode ser muito util para médias globais e de grupo.\n  mutate(across(SiO2:MgO,~ifelse(.x==0, mean(.x),.x)),  # substituir 0 por média por grupo (1 para cada valor de tectonic setting diferente) \n         across(SiO2:MgO,~round(.x,digits=2))) %&gt;% \n  reframe(n=n(),\n          across(.cols=SiO2:MgO,~round(mean(.x,na.rm = TRUE),2))) %&gt;%\n  pivot_longer(cols=SiO2:MgO) %&gt;% # Alongar dataframe para forma tidy\n  ungroup() %&gt;% \n  group_by(name) %&gt;%  \n  pivot_wider(id_cols=Tectonic_setting,values_from=value) # Expandir lateralmente o dataframe\n\n# A tibble: 9 × 7\n  Tectonic_setting          SiO2  TiO2 Al2O3  FeOt   MnO   MgO\n  &lt;chr&gt;                    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 ARCHAEAN CRATONS          69.6  0.31  15.4  2.43  0.04  1.33\n2 CONTINENTAL FLOOD BASALT  67.5  0.53  14.6  4.21  0.13  0.5 \n3 CONVERGENT MARGIN         66.4  0.52  15.7  3.92  0.08  1.7 \n4 INTRAPLATE VOLCANICS      70.3  0.32  14.1  3.35  0.08  0.49\n5 OCEAN ISLAND              65.2  0.53  16.2  4.02  0.16  0.44\n6 OCEANIC PLATEAU           63.6  0.52  16.1  5.05  0.1   2.59\n7 OPHIOLITE                 61.6  1.07  15.0  6.03  0.17  2.41\n8 OROGENIC BELT             69.8  0.41  14.4  2.85  0.07  1.31\n9 RIFT VOLCANICS            69.3  0.43  13.8  3.66  0.1   0.49"
  },
  {
    "objectID": "aula_2.html#select",
    "href": "aula_2.html#select",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "select()",
    "text": "select()\n\nvolc %&gt;% select(volcano_name,-country,latitude:elevation)\n\n# A tibble: 958 × 4\n   volcano_name    latitude longitude elevation\n   &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Abu                 34.5     132.        641\n 2 Acamarachi         -23.3     -67.6      6023\n 3 Acatenango          14.5     -90.9      3976\n 4 Acigol-Nevsehir     38.5      34.6      1683\n 5 Adams               46.2    -121.       3742\n 6 Adatarayama         37.6     140.       1728\n 7 Adwa                10.1      40.8      1733\n 8 Afdera              13.1      40.9      1250\n 9 Agrigan             18.8     146.        965\n10 Agua                14.5     -90.7      3760\n# ℹ 948 more rows\n\nvolc %&gt;% select(!latitude:elevation)\n\n# A tibble: 958 × 23\n   volcano_number volcano_name   primary_volcano_type last_eruption_year country\n            &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;                &lt;chr&gt;              &lt;chr&gt;  \n 1         283001 Abu            Shield(s)            -6850              Japan  \n 2         355096 Acamarachi     Stratovolcano        Unknown            Chile  \n 3         342080 Acatenango     Stratovolcano(es)    1972               Guatem…\n 4         213004 Acigol-Nevseh… Caldera              -2080              Turkey \n 5         321040 Adams          Stratovolcano        950                United…\n 6         283170 Adatarayama    Stratovolcano(es)    1996               Japan  \n 7         221170 Adwa           Stratovolcano        Unknown            Ethiop…\n 8         221110 Afdera         Stratovolcano        Unknown            Ethiop…\n 9         284160 Agrigan        Stratovolcano        1917               United…\n10         342100 Agua           Stratovolcano        Unknown            Guatem…\n# ℹ 948 more rows\n# ℹ 18 more variables: region &lt;chr&gt;, subregion &lt;chr&gt;, tectonic_settings &lt;chr&gt;,\n#   evidence_category &lt;chr&gt;, major_rock_1 &lt;chr&gt;, major_rock_2 &lt;chr&gt;,\n#   major_rock_3 &lt;chr&gt;, major_rock_4 &lt;chr&gt;, major_rock_5 &lt;chr&gt;,\n#   minor_rock_1 &lt;chr&gt;, minor_rock_2 &lt;chr&gt;, minor_rock_3 &lt;chr&gt;,\n#   minor_rock_4 &lt;chr&gt;, minor_rock_5 &lt;chr&gt;, population_within_5_km &lt;dbl&gt;,\n#   population_within_10_km &lt;dbl&gt;, population_within_30_km &lt;dbl&gt;, …\n\nvolc %&gt;% select(starts_with(\"population\"))\n\n# A tibble: 958 × 4\n   population_within_5_km population_within_10_km population_within_30_km\n                    &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n 1                   3597                    9594                  117805\n 2                      0                       7                     294\n 3                   4329                   60730                 1042836\n 4                 127863                  127863                  218469\n 5                      0                      70                    4019\n 6                    428                    3936                  717078\n 7                    101                     485                   18645\n 8                     51                    6042                    8611\n 9                      0                       0                       0\n10                   9890                  114404                 2530449\n# ℹ 948 more rows\n# ℹ 1 more variable: population_within_100_km &lt;dbl&gt;\n\nvolc %&gt;% select(contains(\"within\"))\n\n# A tibble: 958 × 4\n   population_within_5_km population_within_10_km population_within_30_km\n                    &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n 1                   3597                    9594                  117805\n 2                      0                       7                     294\n 3                   4329                   60730                 1042836\n 4                 127863                  127863                  218469\n 5                      0                      70                    4019\n 6                    428                    3936                  717078\n 7                    101                     485                   18645\n 8                     51                    6042                    8611\n 9                      0                       0                       0\n10                   9890                  114404                 2530449\n# ℹ 948 more rows\n# ℹ 1 more variable: population_within_100_km &lt;dbl&gt;\n\n#- **stars_with()**: colunas que começam com um prefixo\n\n#- **ends_with()**: colunas que terminam com um sufixo\n\n#- **contains()**: colunas que contêm uma string\n\n#- **last_col()**: última coluna"
  },
  {
    "objectID": "aula_2.html#filter",
    "href": "aula_2.html#filter",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "filter()",
    "text": "filter()\n\nvolc %&gt;% select(volcano_name,country,latitude:elevation) %&gt;% \n         filter(country== \"Antarctica\")\n\n# A tibble: 17 × 5\n   volcano_name        country    latitude longitude elevation\n   &lt;chr&gt;               &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Andrus              Antarctica    -75.8    -132.       2978\n 2 Berlin              Antarctica    -76.0    -136        3478\n 3 Buckle Island       Antarctica    -66.8     163.       1239\n 4 Deception Island    Antarctica    -63.0     -60.7       602\n 5 Erebus              Antarctica    -77.5     167.       3794\n 6 Hudson Mountains    Antarctica    -74.3     -99.4       749\n 7 James Ross Island   Antarctica    -64.2     -57.8      1630\n 8 Melbourne           Antarctica    -74.4     165.       2732\n 9 Morning             Antarctica    -78.5     164.       2723\n10 Penguin Island      Antarctica    -62.1     -57.9       180\n11 Pleiades, The       Antarctica    -72.7     166.       3040\n12 Royal Society Range Antarctica    -78.2     163.       3000\n13 Seal Nunataks Group Antarctica    -65.0     -60.0       368\n14 Siple               Antarctica    -73.4    -127.       3110\n15 Takahe              Antarctica    -76.3    -112.       3460\n16 Toney Mountain      Antarctica    -75.8    -116.       3595\n17 Waesche             Antarctica    -77.2    -127.       3292\n\nvolc %&gt;% select(volcano_name,country,latitude:elevation) %&gt;% \n         filter(!country== \"Chile\") %&gt;% \n         filter(elevation&gt;1000,\n                latitude&gt;0,\n                longitude&gt;0)\n\n# A tibble: 252 × 5\n   volcano_name     country  latitude longitude elevation\n   &lt;chr&gt;            &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Acigol-Nevsehir  Turkey       38.5      34.6      1683\n 2 Adatarayama      Japan        37.6     140.       1728\n 3 Adwa             Ethiopia     10.1      40.8      1733\n 4 Afdera           Ethiopia     13.1      40.9      1250\n 5 Aira             Japan        31.6     131.       1117\n 6 Akademia Nauk    Russia       54.0     159.       1180\n 7 Akagisan         Japan        36.6     139.       1828\n 8 Akan             Japan        43.4     144.       1499\n 9 Akita-Komagatake Japan        39.8     141.       1637\n10 Akita-Yakeyama   Japan        40.0     141.       1366\n# ℹ 242 more rows\n\n# %in% comando logico para declarar vetores para filter\n\nvolc %&gt;% select(volcano_name,country,latitude:elevation) %&gt;% \n         filter(!country %in%  c(\"Chile\",\"Argentina\",\"Japan\"))\n\n# A tibble: 809 × 5\n   volcano_name    country       latitude longitude elevation\n   &lt;chr&gt;           &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Acatenango      Guatemala        14.5      -90.9      3976\n 2 Acigol-Nevsehir Turkey           38.5       34.6      1683\n 3 Adams           United States    46.2     -121.       3742\n 4 Adwa            Ethiopia         10.1       40.8      1733\n 5 Afdera          Ethiopia         13.1       40.9      1250\n 6 Agrigan         United States    18.8      146.        965\n 7 Agua            Guatemala        14.5      -90.7      3760\n 8 Agua de Pau     Portugal         37.8      -25.5       947\n 9 Agung           Indonesia        -8.34     116.       2997\n10 Ahyi            United States    20.4      145.        -75\n# ℹ 799 more rows\n\n# | ou\n\n# & e\n\nvolc %&gt;% \n  select(volcano_name, country, latitude:elevation) %&gt;% \n  filter(country == \"Antarctica\" | latitude &lt; 10)\n\n# A tibble: 382 × 5\n   volcano_name country          latitude longitude elevation\n   &lt;chr&gt;        &lt;chr&gt;               &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Acamarachi   Chile              -23.3      -67.6      6023\n 2 Aguilera     Chile              -50.3      -73.8      2546\n 3 Agung        Indonesia           -8.34     116.       2997\n 4 Alcedo       Ecuador             -0.43     -91.1      1130\n 5 Aliso        Ecuador             -0.53     -78        4267\n 6 Alutu        Ethiopia             7.77      38.8      2335\n 7 Amasing      Indonesia           -0.53     127.       1030\n 8 Ambae        Vanuatu            -15.4      168.       1496\n 9 Ambang       Indonesia            0.75     124.       1795\n10 Ambitle      Papua New Guinea    -4.08     154.        450\n# ℹ 372 more rows\n\nvolc %&gt;% \n  select(volcano_name, country, latitude:elevation) %&gt;% \n  filter(country == \"Antarctica\" & elevation &gt; 500)\n\n# A tibble: 15 × 5\n   volcano_name        country    latitude longitude elevation\n   &lt;chr&gt;               &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Andrus              Antarctica    -75.8    -132.       2978\n 2 Berlin              Antarctica    -76.0    -136        3478\n 3 Buckle Island       Antarctica    -66.8     163.       1239\n 4 Deception Island    Antarctica    -63.0     -60.7       602\n 5 Erebus              Antarctica    -77.5     167.       3794\n 6 Hudson Mountains    Antarctica    -74.3     -99.4       749\n 7 James Ross Island   Antarctica    -64.2     -57.8      1630\n 8 Melbourne           Antarctica    -74.4     165.       2732\n 9 Morning             Antarctica    -78.5     164.       2723\n10 Pleiades, The       Antarctica    -72.7     166.       3040\n11 Royal Society Range Antarctica    -78.2     163.       3000\n12 Siple               Antarctica    -73.4    -127.       3110\n13 Takahe              Antarctica    -76.3    -112.       3460\n14 Toney Mountain      Antarctica    -75.8    -116.       3595\n15 Waesche             Antarctica    -77.2    -127.       3292"
  },
  {
    "objectID": "aula_2.html#mutate",
    "href": "aula_2.html#mutate",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "mutate()",
    "text": "mutate()\n\nvolc %&gt;% \n  select(volcano_name, country,last_eruption_year) %&gt;% \n  filter(!last_eruption_year== \"Unknown\") %&gt;% \n  mutate(last_eruption_year=as.numeric(last_eruption_year),\n         ultima_erupcao=(2022-last_eruption_year),\n         ultima_erupcao_milhar=ultima_erupcao/1000,\n         ultima_erupcao_milhao=ultima_erupcao/1000000)  \n\n# A tibble: 657 × 6\n   volcano_name  country last_eruption_year ultima_erupcao ultima_erupcao_milhar\n   &lt;chr&gt;         &lt;chr&gt;                &lt;dbl&gt;          &lt;dbl&gt;                 &lt;dbl&gt;\n 1 Abu           Japan                -6850           8872                 8.87 \n 2 Acatenango    Guatem…               1972             50                 0.05 \n 3 Acigol-Nevse… Turkey               -2080           4102                 4.10 \n 4 Adams         United…                950           1072                 1.07 \n 5 Adatarayama   Japan                 1996             26                 0.026\n 6 Agrigan       United…               1917            105                 0.105\n 7 Agua de Pau   Portug…               1564            458                 0.458\n 8 Aguilera      Chile                -1250           3272                 3.27 \n 9 Agung         Indone…               2019              3                 0.003\n10 Ahyi          United…               2014              8                 0.008\n# ℹ 647 more rows\n# ℹ 1 more variable: ultima_erupcao_milhao &lt;dbl&gt;\n\nvolc %&gt;% \n  mutate(rocha=case_when(\n        major_rock_1 %in% c(\"Andesite / Basaltic Andesite\",\"Basalt / Picro-Basalt\" ,\"Trachyte / Trachydacite\",\"Trachyandesite / Basaltic Trachyandesite\")~\"vulcanica basica\",\n    major_rock_1 %in% c(\"Phonolite\",\"Foidite\",\"Trachybasalt / Tephrite Basanite\",\"Phono-tephrite /  Tephri-phonolite\")~\"vulcanica alcalina\",\n    TRUE~\"volcanica acida\")) %&gt;% \n  count(rocha)\n\n# A tibble: 3 × 2\n  rocha                  n\n  &lt;chr&gt;              &lt;int&gt;\n1 volcanica acida      108\n2 vulcanica alcalina    75\n3 vulcanica basica     775\n\nunique(volc$major_rock_1)\n\n [1] \"Andesite / Basaltic Andesite\"            \n [2] \"Dacite\"                                  \n [3] \"Rhyolite\"                                \n [4] \"Basalt / Picro-Basalt\"                   \n [5] \"Trachyte / Trachydacite\"                 \n [6] \"Phono-tephrite /  Tephri-phonolite\"      \n [7] \"Trachyandesite / Basaltic Trachyandesite\"\n [8] \"Trachybasalt / Tephrite Basanite\"        \n [9] \"Foidite\"                                 \n[10] \"Phonolite\""
  },
  {
    "objectID": "aula_2.html#count-e-arrange",
    "href": "aula_2.html#count-e-arrange",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "Count e arrange()",
    "text": "Count e arrange()\n\nvolc %&gt;% \n  count(country) %&gt;% \n  arrange(desc(n))\n\n# A tibble: 89 × 2\n   country              n\n   &lt;chr&gt;            &lt;int&gt;\n 1 United States       99\n 2 Indonesia           95\n 3 Japan               92\n 4 Russia              79\n 5 Chile               43\n 6 Iceland             28\n 7 Mexico              28\n 8 Papua New Guinea    28\n 9 Philippines         27\n10 Ecuador             26\n# ℹ 79 more rows\n\nvolc %&gt;% \n  count(country) %&gt;% \n  arrange(n)\n\n# A tibble: 89 × 2\n   country                   n\n   &lt;chr&gt;                 &lt;int&gt;\n 1 Algeria                   1\n 2 Armenia-Azerbaijan        1\n 3 Burma (Myanmar)           1\n 4 Cape Verde                1\n 5 Chile-Peru                1\n 6 China-North Korea         1\n 7 Colombia-Ecuador          1\n 8 Comoros                   1\n 9 Djibouti                  1\n10 El Salvador-Guatemala     1\n# ℹ 79 more rows"
  },
  {
    "objectID": "aula_2.html#group_by",
    "href": "aula_2.html#group_by",
    "title": "Aula 2 - Introdução ao tidyverse",
    "section": "Group_by ()",
    "text": "Group_by ()\n\nvolc %&gt;% \n  filter(!last_eruption_year==\"Unknown\") %&gt;% \n  group_by(last_eruption_year,country) %&gt;% \n  count(last_eruption_year,sort = TRUE) %&gt;%  \n  ungroup()\n\n# A tibble: 591 × 3\n   last_eruption_year country           n\n   &lt;chr&gt;              &lt;chr&gt;         &lt;int&gt;\n 1 2020               Indonesia         8\n 2 2020               Japan             5\n 3 -550               Russia            4\n 4 2019               Indonesia         4\n 5 2020               Russia            4\n 6 1992               United States     3\n 7 1996               Japan             3\n 8 2000               Indonesia         3\n 9 2008               United States     3\n10 2015               Indonesia         3\n# ℹ 581 more rows\n\n\nSummarise ou reframe()\n\n# Função SE\nSE&lt;-function(vetor,IC){\n  SD&lt;-sd(vetor)\n  N&lt;-length(vetor)\n  SE&lt;-(SD*IC)/sqrt(N)\n \n   return(\n    SE\n  )\n}\n\n# Summarise\nvolc %&gt;% \n  group_by(country) %&gt;% \n  summarise(n=n(),\n            media_pop_5km=mean(population_within_5_km),\n            sd_pop_km=sd(population_within_5_km),\n            se_pop_5km=SE(population_within_5_km,1),\n            max_pop_5km=max(population_within_5_km),\n            min_pop_5km=min(population_within_5_km)) %&gt;% \n  arrange(desc(media_pop_5km)) %&gt;% \n  filter(n&gt;15) %&gt;% \n  mutate(across(.cols=media_pop_5km:min_pop_5km,~round(.x,digits=0)))\n\n# A tibble: 16 × 7\n   country          n media_pop_5km sd_pop_km se_pop_5km max_pop_5km min_pop_5km\n   &lt;chr&gt;        &lt;int&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n 1 Mexico          28        269105   1091616     206296     5783287           0\n 2 Philippines     27        102291    306707      59026     1349742          11\n 3 Nicaragua       16         97064    251139      62785      989888         100\n 4 New Zealand     16         71199    261129      65282     1049110           0\n 5 Ethiopia        26         69227    148454      29114      565206           0\n 6 Guatemala       17         63078     88080      21362      240892        1373\n 7 Ecuador         26         41014    117168      22979      534403           0\n 8 Indonesia       95         35195    129642      13301     1092929           3\n 9 Japan           92          6355     19149       1996      130474           0\n10 Iceland         28          3496      8458       1598       33526           0\n11 Papua New G…    28          2978      5215        986       24509           1\n12 United Stat…    99          1745      7356        739       52801           0\n13 Chile           43           459      1233        188        5951           0\n14 Canada          18           444      1559        367        6635           0\n15 Russia          79            24        96         11         669           0\n16 Antarctica      17             0         0          0           0           0\n\n# México\n#n=28\n\n#269105.1 ± 206295.9 habitantes(sigma 1)\n\n# Guatemala\n# n = 17\n# 63078 ± 21362 habitantes"
  },
  {
    "objectID": "aula_3.html",
    "href": "aula_3.html",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "Dr. Gabriel Bertolini\n2º semestre 2023 - PPGGEO UFRGS\nOficina de programação.\nAula introdutória sobre gráficos com ggplot.\n\n\n\n#install.packages(\"ggtern\")\n#install.packages(\"patchwork\")\n#install.packages(\"tidypaleo\")\n\n\n\n\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCarregando pacotes exigidos: ggplot2\n\n\nRegistered S3 methods overwritten by 'ggtern':\n  method           from   \n  grid.draw.ggplot ggplot2\n  plot.ggplot      ggplot2\n  print.ggplot     ggplot2\n\n\n--\nRemember to cite, run citation(package = 'ggtern') for further info.\n--\n\n\n\nAttaching package: 'ggtern'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    aes, annotate, ggplot, ggplot_build, ggplot_gtable, ggplotGrob,\n    ggsave, layer_data, theme_bw, theme_classic, theme_dark,\n    theme_gray, theme_light, theme_linedraw, theme_minimal, theme_void\n\n\nLinking to GEOS 3.9.1, GDAL 3.3.2, PROJ 7.2.1; sf_use_s2() is TRUE\n\n\n\nAttaching package: 'ggspatial'\n\n\nThe following objects are masked from 'package:ggtern':\n\n    aes, ggplot\n\n\n\n\n\nBanco obtido em @bonin2020 .\n\nBD&lt;-read.csv(\"./data/geoquimica_granito.csv\") %&gt;%\n    as_tibble()\n\nBanco obtido em @bertolini2020\n\nlvsd&lt;-read.csv(\"./data/lvsd.csv\") %&gt;%\n    as_tibble()\n\n\n\n\n\n\n\nPLOT1&lt;-BD %&gt;%\n  select(SiO2,TiO2) %&gt;%\n  ggplot(aes(x=TiO2,y=SiO2))+\n  #parametro aes()=aestetic para parametro \n  #relacionado ao banco de dado (coluna)\n  geom_point(size=2)+\n  #tipo de elemento gráfico a ser usado,\n  #no caso pontos\n  scale_x_log10()\n  #parametro adicionado para usar\n  #escala log10 no eixo x\n\nplotly::ggplotly(PLOT1)\n\n\n\n\n\nAqui, vamos fazer um gráfico de dispersão utilizando diferentes transparencias, adicionadas com função mutate e criação da coluna transp. Notar uso do aes() para mapear o banco de dados.\n\nBD %&gt;%\n  select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n  mutate(transp=ifelse(Tectonic_setting==\"CONTINENTAL FLOOD BASALT\",0.8,0.3)) %&gt;%\n  ggplot(aes(x=SiO2,y=TiO2,size=MgO,color=Tectonic_setting))+\n  #geom_point(alpha=0.5) # Parametro alpha para transparência\n  geom_point(aes(alpha=transp))\n\n\n\n\nA função ggsave() pode salvar o plot.\n\n#ggsave(\"./plots/plot1.jpg\")\n\nPlot múltiplos com facet_wrap()\n\nBD %&gt;%\n  select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n  ggplot(aes(x=SiO2,y=TiO2,size=MgO,col=Tectonic_setting))+\n  geom_point()+\n  labs(x=\"Óxido de Silicio\",\n       y=\"Óxido de Titânio\",\n       size=\"Proporção de Magnésio\",\n       col=\"Ambiente tectonico\",\n       title = \" Relação entre Silicio e Titânio em diferentes ambientes geotectônicos\")+\n  facet_wrap(~Tectonic_setting)\n\n\n\n\nou facet_grid()\n\nBD %&gt;% \n  select(SiO2,TiO2,MgO,Tectonic_setting,TASMiddlemostPlut,SubGroup) %&gt;%\n  filter(Tectonic_setting==\"ARCHAEAN CRATONS\") %&gt;% \n  ggplot(aes(x=SiO2,y=TiO2,col=SubGroup))+\n  geom_point()+ \n  facet_grid(TASMiddlemostPlut~SubGroup)\n\n\n\n\n\n\n\nQual a distribuição das séries de granitos utilizando o diagrama P-Q (Debon & Fort, 1983, 1988)\nP = K - (Na + Ca)\nQ = Si/3 - (K + Na + 2*(Ca/3))\nP vs Q\n\nFazer gráfico de dispersão P vs. Q no banco dos granitos\n\n\nBD %&gt;% select(K=K2O,Na=Na2O,Si=SiO2,Ca=CaO,SubGroup) %&gt;%\n       mutate(P = K - (Na + Ca),\n              Q = Si/3 - (K + Na + 2*(Ca/3))) %&gt;%\n      ggplot(aes(P,Q,col=SubGroup))+\n      geom_point()+\n      geom_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCriar vários plots pela coluna SubGroup.\n\n\nBD %&gt;% select(K=K2O,Na=Na2O,Si=SiO2,Ca=CaO,SubGroup) %&gt;%\n       mutate(P = K - (Na + Ca),\n              Q = Si/3 - (K + Na + 2*(Ca/3))) %&gt;%\n       ggplot(aes(P,Q,col=SubGroup))+\n       geom_point()+\n       geom_smooth(method=\"lm\",col=\"black\")+\n       facet_wrap(~SubGroup)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nBD %&gt;%\n    select(SiO2, TiO2, MgO, Tectonic_setting) %&gt;%\n    ggplot(aes(x = Tectonic_setting, y = TiO2, fill = Tectonic_setting)) +\n    geom_boxplot()+\n    theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\nOu, versão violino\n\nBD %&gt;%\n    select(SiO2, TiO2, MgO, Tectonic_setting) %&gt;%\n    ggplot(aes(x = Tectonic_setting, y = TiO2, fill = Tectonic_setting)) +\n    geom_violin()+\n    theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\n\n\n\n\nBD %&gt;% select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n       ggplot(aes(x=SiO2))+\n       geom_histogram(bins=10)+\n       geom_vline(aes(xintercept=mean(SiO2)))+ # Adiciona média\n       geom_vline(col=\"red\",aes(xintercept=median(SiO2))) # adiciona mediana\n\n\n\nhisto_ploter &lt;- function(df,bins = 10) {\n  \n  df %&gt;%\n    ggplot(aes(x = SiO2) ) +\n    geom_histogram(bins = bins) +\n    geom_vline(aes(xintercept = mean(SiO2))) +\n    geom_vline(col = \"red\", aes(xintercept = median(SiO2)))\n}\n\nhisto_ploter(BD,5)\n\n\n\nplotly::ggplotly(histo_ploter(BD))\n\n\n\n\n\nHistograma pivotado\n\nBD %&gt;%\n  select(SiO2:P2O5) %&gt;%\n  mutate(across(.cols = SiO2:P2O5, as.numeric)) %&gt;%\n  pivot_longer(cols = SiO2:P2O5,\n               names_to = \"element\",\n               values_to = \"values\") %&gt;%\n  group_by(element) %&gt;%\n  mutate(media = median(values, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(values)) +\n  geom_histogram() +\n  geom_vline(col = \"red\", aes(xintercept = media)) +\n  facet_wrap( ~ element, scales = \"free\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nBD %&gt;%\n  select(SiO2, Tectonic_setting) %&gt;%\n  ggplot(aes(x = SiO2, fill = Tectonic_setting)) +\n  geom_density(bw=1, #tamanho da banda\n               alpha = 0.6) +\n  facet_wrap( ~ Tectonic_setting)+\n  labs(fill=\"Ambiente\\nTectônico\")\n\n\n\n\n\n\n\nsimples\n\nBD %&gt;% \n  filter(Tectonic_setting==\"OROGENIC BELT\") %&gt;% \n  select(Q = Quartz,\n              Ab = Albite,\n              An = Anorthite) %&gt;%\n  ggtern(aes(x=Ab, y=Q, z=An)) +\n  geom_point() +\n  ggtern::geom_confidence_tern() \n\n\n\n\nou pivotado\n\nBD %&gt;% \n  filter(Tectonic_setting==\"ARCHAEAN CRATONS\") %&gt;% \n  select(Q = Quartz,\n              Ab = Albite,\n              An = Anorthite,\n              SubGroup) %&gt;%\n  ggtern(aes(x= Ab, y=Q, z=An, col = SubGroup)) +\n  geom_point() +\n  facet_wrap( ~ SubGroup)\n\n\n\n\n\n\n\nHorizontal\n\nBD %&gt;% \n  reframe(n=n(),\n          .by = Tectonic_setting) %&gt;%\n  ggplot(aes(x=n,\n             y=fct_reorder(Tectonic_setting,n),\n             fill=Tectonic_setting))+\n  geom_bar(stat=\"identity\")+\n  labs(y=\"Ambientes tectônicos\") +\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n\n\n\n\nVertical\n\nBD %&gt;% \n  reframe(n=n(),\n          .by = Tectonic_setting) %&gt;%\n  ggplot(aes(x=fct_reorder(Tectonic_setting,desc(n)),\n             y=n,\n             fill=Tectonic_setting))+\n  geom_bar(stat=\"identity\")+\n  scale_x_discrete(guide = guide_axis(n.dodge = 4))+\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n\n\n\n\n\n\n\nSimples, calculando a média com reframe() + mean()\n\nBD %&gt;%\n  select(\n    Q = Quartz,\n    Ab = Albite,\n    An = Anorthite,\n    Tectonic = Tectonic_setting\n  ) %&gt;%\n  reframe(\n    Q = mean(Q, na.rm = TRUE),\n    Ab = mean(Ab, na.rm = TRUE),\n    An = mean(An, na.rm = TRUE)\n  ) %&gt;%\n  pivot_longer(cols = Q:An,\n               names_to = \"mineral\",\n               values_to = \"value\") %&gt;%\n  ggplot(aes(x = \"\", y = value, fill = mineral)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\")\n\n\n\n\nOu então, pivotado\n\nBD %&gt;%\n  select(\n    Q = Quartz,\n    Ab = Albite,\n    Or = Orthoclase,\n    Tectonic = Tectonic_setting\n  ) %&gt;%\n  drop_na(Q,Ab,Or) %&gt;% \n  reframe(\n    Q = mean(Q, na.rm = TRUE),\n    Ab = mean(Ab, na.rm = TRUE),\n    Or = mean(Or, na.rm = TRUE),\n              .by=Tectonic)  %&gt;%\n  group_by(Tectonic) %&gt;% \n  mutate(total=sum(Q,Ab,Or),\n         across(.cols=Q:Or,~.x*100/total)) %&gt;% \n  ungroup() %&gt;%       \n  pivot_longer(cols = Q:Or,\n               names_to = \"mineral\",\n               values_to = \"value\") %&gt;%\n  ggplot(aes(x = \"\", y = value, fill = mineral)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\")+\n  facet_wrap(~Tectonic)\n\n\n\n\n\n\n\nPara dados direcionais, vamos criar um banco de dados dummy:\n\n# Numero de amostras pra grupos A, B \nn_wr&lt;-c(450,450)\n\nn &lt;- 100\n\n# Gere ângulos aleatórios entre 0 e 2*pi (360 graus)\nangulos &lt;- runif(n, min = 0, max = 2 * pi)\n\n# Gere raios aleatórios (magnitude) com uma distribuição desejada\n# Neste exemplo, estamos usando uma distribuição normal (gaussiana)\nraios &lt;- rnorm(n, mean = 1, sd = 0.2)\n\n# Converta as coordenadas polares em coordenadas cartesianas\nx &lt;- raios * cos(angulos)\ny &lt;- raios * sin(angulos)\n\n# Crie um gráfico de dispersão dos dados\nplot(x, y, main = \"Dados Sintéticos Polares\", xlab = \"X\", ylab = \"Y\")\n\n\n\n#Parametros de simulação \nripples&lt;-50\nripples_SD&lt;-15\ndunas&lt;-150\ndunas_SD&lt;-5\n\n# Criar banco de dados\n\nPALEOCURRENTS&lt;-tibble(direction=c(rnorm(1:n_wr[1],mean=ripples,sd=ripples_SD),\n                                  rnorm(1:n_wr[2],mean=dunas,sd=dunas_SD)),\n                      facies=c(rep(\"WINDRIPPLES\",times=n_wr[1]),\n                               rep(\"DUNES\",times=n_wr[2])))\n\nPALEOCURRENTS\n\n# A tibble: 900 × 2\n   direction facies     \n       &lt;dbl&gt; &lt;chr&gt;      \n 1      47.2 WINDRIPPLES\n 2      40.8 WINDRIPPLES\n 3      57.7 WINDRIPPLES\n 4      57.2 WINDRIPPLES\n 5      42.0 WINDRIPPLES\n 6      20.9 WINDRIPPLES\n 7      63.9 WINDRIPPLES\n 8      40.6 WINDRIPPLES\n 9      69.8 WINDRIPPLES\n10      31.4 WINDRIPPLES\n# ℹ 890 more rows\n\n\nGrafico simples\n\nPALEOCURRENTS %&gt;% \n  ggplot(aes(x=direction,fill=facies))+\n  geom_histogram(color=\"white\",bins=30,breaks=seq(0, 360,by=10))+\n  coord_polar()+\n  scale_x_continuous(\"\", limits = c(0, 360), \n                     breaks = seq(0, 360,by=30), \n                     labels =  seq(0, 360,by=30))\n\n\n\n\n\n\n\n\nlvsd %&gt;%\n  filter(well == \"TG-227\") %&gt;%\n  pivot_longer(\n    cols = c(p_wave:s_wave, porosity, density),\n    names_to = \"var\",\n    values_to = \"value\"\n  ) %&gt;%\n  dplyr::mutate(var = factor(var, levels = c(\"porosity\", \"density\", \"p_wave\", \"s_wave\"))) %&gt;%\n  ggplot(aes(x = value, y = depth)) +\n  geom_rect(\n    mapping = aes(\n      ymin = 283.45,\n      ymax = 298.10,\n      xmin = -Inf,\n      xmax = Inf\n    ),\n    alpha = 0.5,\n    fill = \"gray\",\n    inherit.aes = FALSE\n  ) +\n  geom_rect(\n    mapping = aes(\n      ymin = 298.10,\n      ymax = 340,\n      xmin = -Inf,\n      xmax = Inf\n    ),\n    alpha = 0.3,\n    fill = \"lightyellow\",\n    inherit.aes = FALSE\n  ) +\n  geom_hline(\n    yintercept = c(283.45, 298.10, 340),\n    col = \"red\",\n    lty = 2,\n    alpha = 0.7\n  ) +\n  geom_lineh() +\n  geom_point() +\n  scale_y_reverse() +\n  facet_geochem_gridh(vars(var), scales = \"free\") +\n  labs(x = NULL,\n       y = \"Depth (m)\") +\n  theme_paleo()\n\n\n\n\n\n\n\nPara usar o R para mapas, algumas bibliotecas são fundamentais, como:\n\nsf: Cria objetos espaciais com sistemas de referência de coordenadas e diversas funções de geoprocessamento.\nterra e raster: Pacotes indicados para trabalhar com dados do tipo raster, cada um com suas particularidades.\n\nOutras bibliotecas são muito úteis para coisas em especifico\n\nchronosphere: Focado em dados de períodos geológicos distintos, com API para dados paleogeográficos e paleoclimáticos.\nmapview: Biblioteca para visualização rapida de dados espaciais de forma interativa\nggspatial, ggdal, tidyterra: Extensões do ggplot2 para manipulação e visualização de dados espaciais.\ngeobr: Fornece bases cartográficas brasileiras.\nvapour: Leitura eficiente de arquivos raster, como imagens de satélite e DEMs.\n\nA estrutura para mapas com ggplot é igual as anteriores. Vamos começar criando um banco de dados dummy com coordenadas dentro do brasil\n\ncoords_br &lt;- data.frame(\n  id=1:10,\n  latitude = runif(10, min = -33, max = 0), # Valores aleatórios para latitude\n  longitude = runif(10, min = -54, max = -40) # Valores aleatórios para longitude\n)\n\nVamos visualizar rapidamente com mapview, mas para isso, primeiro precisamos converter o dataframe coords_br para um dado espacial. Para isso, vamos usar a função st_as_sf() da biblioteca sf:\n\n# Coordinate Ref System WGS84 latlong = 4326\n# Funciona melhor no viewer\nlibrary(sf)\n\ncoords_br %&gt;% \n  st_as_sf(coords = c(\"longitude\",\"latitude\"), # informar nome colunas com X,Y\n           crs=4326) -&gt;BDS_SPATIAL\n\nBDS_SPATIAL %&gt;% # informar crs WGS84 / EPSG = european petroleum society...\n  mapview(.)\n\n\n\n\n\n\nVamos tilizar agora o pacote geobr para baixar dados cartograficos do brasil.\n\n# baixar shapefile estados brasileiros\nestados&lt;-geobr::read_state()\n\nUsing year 2010\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\nPOA&lt;-geobr::read_municipality() %&gt;% \n  filter(name_muni==\"POA\")\n\nUsing year 2010\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\n# filtrar para RS\nrs &lt;- estados %&gt;% \n  filter(abbrev_state==\"RS\")\n# criar coordenadas dummies dentro do RS\ncoords&lt;-st_sample(rs, 100) \n\nCriação do mapa com ggplot\n\nlibrary(ggspatial)\n\ninset&lt;-  ggplot()+\n  geom_sf(data = estados,fill=\"black\")+\n  geom_sf(data = rs,fill=\"red\")+\n  theme_void() +  # Remove elementos do gráfico\n  theme(plot.background = element_rect(fill = \"transparent\", colour = NA))  # Define o fundo como transparente\n\n\nRS&lt;-ggplot()+\n    geom_sf(data = rs,linewidth=1)+\n    geom_sf(data = coords,color=\"grey50\",size=2)+\n    geom_sf(data=POA,fill=\"red\")+\n    coord_sf(xlim=c(-48,-59),\n             ylim=c(-26,-34))+\n    ggspatial::annotation_north_arrow(location=\"tr\")+\n    ggspatial::annotation_scale(location=\"bl\")\n\n#Patchwork\n\nRS + inset_element(inset, left = 0, bottom = 0.7, right = 0.3, top = 1)\n\n\n\n\n\nlibrary(ggdal)\n\nggplot()+\n    ggdal::annotation_gdal(dsn = \"virtualearth\")+\n    geom_sf(data = rs,\n            linewidth=1.5,\n            fill=NA,col=\"white\")+\n    geom_sf(data = coords,color=\"red\",size=2)\n\n\n\n\n\n\n\n\nCores podem inseridas através de:\n\nSeus nomes (“white”, “aliceblue”, “antiquewhite”). Cheque todas usando a função colors()\n\ncolors()\n\n  [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n  [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n  [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n [13] \"azure\"                \"azure1\"               \"azure2\"              \n [16] \"azure3\"               \"azure4\"               \"beige\"               \n [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n [22] \"bisque3\"              \"bisque4\"              \"black\"               \n [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n [28] \"blue2\"                \"blue3\"                \"blue4\"               \n [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n [34] \"brown2\"               \"brown3\"               \"brown4\"              \n [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n [58] \"coral1\"               \"coral2\"               \"coral3\"              \n [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n[100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n[103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n[106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n[109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n[112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n[115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n[118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n[121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n[124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n[127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n[130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n[133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n[136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n[139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n[142] \"gold\"                 \"gold1\"                \"gold2\"               \n[145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n[148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n[151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n[154] \"gray1\"                \"gray2\"                \"gray3\"               \n[157] \"gray4\"                \"gray5\"                \"gray6\"               \n[160] \"gray7\"                \"gray8\"                \"gray9\"               \n[163] \"gray10\"               \"gray11\"               \"gray12\"              \n[166] \"gray13\"               \"gray14\"               \"gray15\"              \n[169] \"gray16\"               \"gray17\"               \"gray18\"              \n[172] \"gray19\"               \"gray20\"               \"gray21\"              \n[175] \"gray22\"               \"gray23\"               \"gray24\"              \n[178] \"gray25\"               \"gray26\"               \"gray27\"              \n[181] \"gray28\"               \"gray29\"               \"gray30\"              \n[184] \"gray31\"               \"gray32\"               \"gray33\"              \n[187] \"gray34\"               \"gray35\"               \"gray36\"              \n[190] \"gray37\"               \"gray38\"               \"gray39\"              \n[193] \"gray40\"               \"gray41\"               \"gray42\"              \n[196] \"gray43\"               \"gray44\"               \"gray45\"              \n[199] \"gray46\"               \"gray47\"               \"gray48\"              \n[202] \"gray49\"               \"gray50\"               \"gray51\"              \n[205] \"gray52\"               \"gray53\"               \"gray54\"              \n[208] \"gray55\"               \"gray56\"               \"gray57\"              \n[211] \"gray58\"               \"gray59\"               \"gray60\"              \n[214] \"gray61\"               \"gray62\"               \"gray63\"              \n[217] \"gray64\"               \"gray65\"               \"gray66\"              \n[220] \"gray67\"               \"gray68\"               \"gray69\"              \n[223] \"gray70\"               \"gray71\"               \"gray72\"              \n[226] \"gray73\"               \"gray74\"               \"gray75\"              \n[229] \"gray76\"               \"gray77\"               \"gray78\"              \n[232] \"gray79\"               \"gray80\"               \"gray81\"              \n[235] \"gray82\"               \"gray83\"               \"gray84\"              \n[238] \"gray85\"               \"gray86\"               \"gray87\"              \n[241] \"gray88\"               \"gray89\"               \"gray90\"              \n[244] \"gray91\"               \"gray92\"               \"gray93\"              \n[247] \"gray94\"               \"gray95\"               \"gray96\"              \n[250] \"gray97\"               \"gray98\"               \"gray99\"              \n[253] \"gray100\"              \"green\"                \"green1\"              \n[256] \"green2\"               \"green3\"               \"green4\"              \n[259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n[262] \"grey1\"                \"grey2\"                \"grey3\"               \n[265] \"grey4\"                \"grey5\"                \"grey6\"               \n[268] \"grey7\"                \"grey8\"                \"grey9\"               \n[271] \"grey10\"               \"grey11\"               \"grey12\"              \n[274] \"grey13\"               \"grey14\"               \"grey15\"              \n[277] \"grey16\"               \"grey17\"               \"grey18\"              \n[280] \"grey19\"               \"grey20\"               \"grey21\"              \n[283] \"grey22\"               \"grey23\"               \"grey24\"              \n[286] \"grey25\"               \"grey26\"               \"grey27\"              \n[289] \"grey28\"               \"grey29\"               \"grey30\"              \n[292] \"grey31\"               \"grey32\"               \"grey33\"              \n[295] \"grey34\"               \"grey35\"               \"grey36\"              \n[298] \"grey37\"               \"grey38\"               \"grey39\"              \n[301] \"grey40\"               \"grey41\"               \"grey42\"              \n[304] \"grey43\"               \"grey44\"               \"grey45\"              \n[307] \"grey46\"               \"grey47\"               \"grey48\"              \n[310] \"grey49\"               \"grey50\"               \"grey51\"              \n[313] \"grey52\"               \"grey53\"               \"grey54\"              \n[316] \"grey55\"               \"grey56\"               \"grey57\"              \n[319] \"grey58\"               \"grey59\"               \"grey60\"              \n[322] \"grey61\"               \"grey62\"               \"grey63\"              \n[325] \"grey64\"               \"grey65\"               \"grey66\"              \n[328] \"grey67\"               \"grey68\"               \"grey69\"              \n[331] \"grey70\"               \"grey71\"               \"grey72\"              \n[334] \"grey73\"               \"grey74\"               \"grey75\"              \n[337] \"grey76\"               \"grey77\"               \"grey78\"              \n[340] \"grey79\"               \"grey80\"               \"grey81\"              \n[343] \"grey82\"               \"grey83\"               \"grey84\"              \n[346] \"grey85\"               \"grey86\"               \"grey87\"              \n[349] \"grey88\"               \"grey89\"               \"grey90\"              \n[352] \"grey91\"               \"grey92\"               \"grey93\"              \n[355] \"grey94\"               \"grey95\"               \"grey96\"              \n[358] \"grey97\"               \"grey98\"               \"grey99\"              \n[361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n[364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n[367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n[370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n[373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n[376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n[379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n[382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n[385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n[388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n[391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n[394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n[397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n[400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n[403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n[406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n[409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n[412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n[415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n[418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n[421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n[424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n[427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n[430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n[433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n[436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n[439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n[442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n[445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n[448] \"limegreen\"            \"linen\"                \"magenta\"             \n[451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n[454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n[457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n[460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n[463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n[466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n[469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n[472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n[475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n[478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n[481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n[484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n[487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n[490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n[493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n[496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n[499] \"orange1\"              \"orange2\"              \"orange3\"             \n[502] \"orange4\"              \"orangered\"            \"orangered1\"          \n[505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n[508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n[511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n[514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n[517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n[520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n[523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n[526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n[529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n[532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n[535] \"peru\"                 \"pink\"                 \"pink1\"               \n[538] \"pink2\"                \"pink3\"                \"pink4\"               \n[541] \"plum\"                 \"plum1\"                \"plum2\"               \n[544] \"plum3\"                \"plum4\"                \"powderblue\"          \n[547] \"purple\"               \"purple1\"              \"purple2\"             \n[550] \"purple3\"              \"purple4\"              \"red\"                 \n[553] \"red1\"                 \"red2\"                 \"red3\"                \n[556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n[559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n[562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n[565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n[568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n[571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n[574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n[577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n[580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n[583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n[586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n[589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n[592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n[595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n[598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n[601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n[604] \"slategrey\"            \"snow\"                 \"snow1\"               \n[607] \"snow2\"                \"snow3\"                \"snow4\"               \n[610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n[613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n[616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n[619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n[622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n[625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n[628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n[631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n[634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n[637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n[640] \"violet\"               \"violetred\"            \"violetred1\"          \n[643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n[646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n[649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n[652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n[655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"         \n\n\nPor seus códigos\n\npar(mfrow=c(1,2))\n\n# Hexadecimal\nplot(1:10, col = \"#FF5733\", main=\"Hexadecimal\")\n\n# RGB\nplot(1:10, col = rgb(255, 87, 51, maxColorValue = 255),main=\"RGB\")\n\n\n\npar(mfrow=c(1,1))\n\nPaletas prontas de cores- as mais utilizadas são Viridis e rColorBrewer\n\nAs paletas de cores são em geral convergentes, divergentes ou categóricas. Outra subdivisão são valores continuos ou discretos.\n\n\n\n\nUsar scale_*_viridis_b para dados continuos separados em grupos (bins). * representa ou color ou fill.\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_b(option = \"magma\",n.breaks=3) +\n  labs(title = \"Viridis - Magma (A)\")\n\n\n\n\n\n\n\nUsar scale_*_viridis_c para dados continuos. * representa ou color ou fill : color para as linhas (no caso o ponto) e fill para colunas.\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"magma\") +\n  labs(title = \"Viridis - Magma (A)\")-&gt;A\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"inferno\") +\n  labs(title = \"Viridis - Inferno (B)\")-&gt;B\n\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"plasma\") +\n  labs(title = \"Viridis - Plasma (C)\")-&gt;C\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"viridis\") +\n  labs(title = \"Viridis - Viridis (D)\")-&gt;D\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"cividis\") +\n  labs(title = \"Viridis - Cividis (E)\")-&gt;E\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"rocket\") +\n  labs(title = \"Viridis - rocket (F)\")-&gt;F1\n\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"mako\") +\n  labs(title = \"Viridis - Mako (G)\")-&gt;G\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"turbo\") +\n  labs(title = \"Viridis - Turbo(H)\")-&gt;H\n\n\nA+B+C+D+E+F1+G+H+\nplot_layout(ncol = 2)\n\n\n\n\n\n\n\nUsar scale_*_viridis_dpara dados discretos. * representa ou color ou fill : color para as linhas (no caso o ponto) e fill para colunas.\n\nBD %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,TiO2),\n             y=TiO2,\n             fill=fct_reorder(Tectonic_setting,TiO2)))+\n  geom_boxplot()+\n  scale_fill_viridis_d(option = \"magma\") +\n  labs(title = \"Viridis - Magma (A)\",\n       fill=\"Ambiente Tectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\n\n\n\n\nPaleta de cores “color-blind friendly” facilitando visualização universal de gráficos. O conjunto completo de cores pode ser obtido com a função display.brewer.all().\n\ndisplay.brewer.all()\n\n\n\n\nA biblioteca colorbrewer divide suas pallete (conjunto de cores) em sequencial, divergente e categórico, usando a função scale_*_brewer() e o parâmetro pallete para determinar pallete.\n\nBD %&gt;% \n   drop_na(CaO,Na2O,MgO) %&gt;% \n   ggplot(aes(x=CaO,\n              y=Na2O,\n              colour=MgO))+\n  geom_point()+\n  scale_color_distiller(palette = \"Greens\",direction = 1) +\n  labs(title = \"Sequencial Greens\") -&gt; A\n\nBD %&gt;% \n   drop_na(CaO,Na2O,MgO) %&gt;% \n   ggplot(aes(x=CaO,\n              y=Na2O,\n              colour=MgO))+\n  geom_point()+\n  scale_color_distiller(palette = \"YlOrRd\",direction = 1) +\n  labs(title = \"Sequencial YlOrRd\") -&gt; B\n\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,Cu),\n             y=Cu,\n             fill=fct_reorder(Tectonic_setting,Cu)))+\n  geom_boxplot()+\n  scale_fill_brewer(palette = \"Set1\",direction = 1) +\n  scale_y_log10()+\n  labs(title = \"Categórico Set1\",\n       fill=\"Ambiente\\nTectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank())-&gt;C # retirar ticks escala\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,Cu),\n             y=Cu,\n             fill=fct_reorder(Tectonic_setting,Cu)))+\n  geom_violin()+\n  scale_fill_brewer(palette = \"Pastel1\",direction = 1) +\n  scale_y_log10()+\n  labs(title = \"Categórico Pastel1\",\n       fill=\"Ambiente\\nTectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n        axis.text.x=element_blank(), # retirar texto escala\n        axis.ticks.x=element_blank())-&gt;D # retirar ticks escala\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=SiO2,y=Al2O3,colour=log10(Cu)))+\n  geom_point()+\n  scale_colour_distiller(palette = \"Spectral\") +\n  labs(title = \"Divergente Spectral\",\n       fill=\"log10\\nCobre\")-&gt;E\n\nBD %&gt;% \n  drop_na(FeOt) %&gt;% \n  filter(FeOt&gt;0) %&gt;% \n  ggplot(aes(x=SiO2,y=Al2O3,colour=FeOt))+\n  geom_point()+\n  scale_colour_distiller(palette = \"RdBu\") +\n  labs(title = \"Divergente RdBu\",\n       fill=\"Ferro\\ntotal\")-&gt;F1\n\nA+B+C+D+E+F1+plot_layout(ncol=2)\n\n\n\n# & theme( legend.title = element_text(size =10),\n#                                          legend.text = element_text(size = 8),\n#                                          legend.key.size = unit(4, \"cm\"),\n#                                          legend.key.height = unit(1, \"cm\"),  \n#                                          legend.key.width = unit(1, \"cm\"),\n#                                          axis.text.y=element_text(size=3),\n#                                          plot.title=element_text(size=10)\n#                                          )\n\n\n\n\nNo banco de dados\n\nBD %&gt;% \n  select(Tectonic_setting,TiO2,Na2O) %&gt;% \n # \n  mutate(colors=case_when(\n    Tectonic_setting==\"CONVERGENT MARGIN\"~\"red\",\n    Tectonic_setting==\"ARCHAEAN CRATONS\"~\"blue\",\n    Tectonic_setting==\"OROGENIC BELT\"~\"yellow\",\n    TRUE~\"black\"\n  )) %&gt;% \n  ggplot(aes(x=TiO2,y=Na2O,color=colors))+\n  geom_point()+\n  scale_color_identity() \n\n\n\n\nVetor\n\ncols&lt;-c(\"red\",\"blue\",\"yellow\")\n\nBD %&gt;% \n  filter(Tectonic_setting %in% c(\"CONVERGENT MARGIN\", \"ARCHAEAN CRATONS\", \"OROGENIC BELT\") ) %&gt;% \nggplot(aes(x=TiO2,y=Na2O,color=Tectonic_setting))+\n  geom_point()+\n  scale_color_manual(values=cols) \n\n\n\n\nManuais\n\nBD %&gt;% \n  filter(Tectonic_setting %in% c(\"CONVERGENT MARGIN\", \"ARCHAEAN CRATONS\", \"OROGENIC BELT\",\"RIFT VOLCANICS\") ) %&gt;% \nggplot(aes(x=TiO2,y=Na2O,color=Tectonic_setting))+\n  geom_point()+\n  scale_color_manual(values=c(\"red\",\"blue\",\"yellow\",\"black\"))"
  },
  {
    "objectID": "aula_3.html#instalar-pacotes",
    "href": "aula_3.html#instalar-pacotes",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "#install.packages(\"ggtern\")\n#install.packages(\"patchwork\")\n#install.packages(\"tidypaleo\")"
  },
  {
    "objectID": "aula_3.html#importar-biblioteca",
    "href": "aula_3.html#importar-biblioteca",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "Attaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCarregando pacotes exigidos: ggplot2\n\n\nRegistered S3 methods overwritten by 'ggtern':\n  method           from   \n  grid.draw.ggplot ggplot2\n  plot.ggplot      ggplot2\n  print.ggplot     ggplot2\n\n\n--\nRemember to cite, run citation(package = 'ggtern') for further info.\n--\n\n\n\nAttaching package: 'ggtern'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    aes, annotate, ggplot, ggplot_build, ggplot_gtable, ggplotGrob,\n    ggsave, layer_data, theme_bw, theme_classic, theme_dark,\n    theme_gray, theme_light, theme_linedraw, theme_minimal, theme_void\n\n\nLinking to GEOS 3.9.1, GDAL 3.3.2, PROJ 7.2.1; sf_use_s2() is TRUE\n\n\n\nAttaching package: 'ggspatial'\n\n\nThe following objects are masked from 'package:ggtern':\n\n    aes, ggplot"
  },
  {
    "objectID": "aula_3.html#importar-os-bancos",
    "href": "aula_3.html#importar-os-bancos",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "Banco obtido em @bonin2020 .\n\nBD&lt;-read.csv(\"./data/geoquimica_granito.csv\") %&gt;%\n    as_tibble()\n\nBanco obtido em @bertolini2020\n\nlvsd&lt;-read.csv(\"./data/lvsd.csv\") %&gt;%\n    as_tibble()"
  },
  {
    "objectID": "aula_3.html#gráficos-ggplot2",
    "href": "aula_3.html#gráficos-ggplot2",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "PLOT1&lt;-BD %&gt;%\n  select(SiO2,TiO2) %&gt;%\n  ggplot(aes(x=TiO2,y=SiO2))+\n  #parametro aes()=aestetic para parametro \n  #relacionado ao banco de dado (coluna)\n  geom_point(size=2)+\n  #tipo de elemento gráfico a ser usado,\n  #no caso pontos\n  scale_x_log10()\n  #parametro adicionado para usar\n  #escala log10 no eixo x\n\nplotly::ggplotly(PLOT1)\n\n\n\n\n\nAqui, vamos fazer um gráfico de dispersão utilizando diferentes transparencias, adicionadas com função mutate e criação da coluna transp. Notar uso do aes() para mapear o banco de dados.\n\nBD %&gt;%\n  select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n  mutate(transp=ifelse(Tectonic_setting==\"CONTINENTAL FLOOD BASALT\",0.8,0.3)) %&gt;%\n  ggplot(aes(x=SiO2,y=TiO2,size=MgO,color=Tectonic_setting))+\n  #geom_point(alpha=0.5) # Parametro alpha para transparência\n  geom_point(aes(alpha=transp))\n\n\n\n\nA função ggsave() pode salvar o plot.\n\n#ggsave(\"./plots/plot1.jpg\")\n\nPlot múltiplos com facet_wrap()\n\nBD %&gt;%\n  select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n  ggplot(aes(x=SiO2,y=TiO2,size=MgO,col=Tectonic_setting))+\n  geom_point()+\n  labs(x=\"Óxido de Silicio\",\n       y=\"Óxido de Titânio\",\n       size=\"Proporção de Magnésio\",\n       col=\"Ambiente tectonico\",\n       title = \" Relação entre Silicio e Titânio em diferentes ambientes geotectônicos\")+\n  facet_wrap(~Tectonic_setting)\n\n\n\n\nou facet_grid()\n\nBD %&gt;% \n  select(SiO2,TiO2,MgO,Tectonic_setting,TASMiddlemostPlut,SubGroup) %&gt;%\n  filter(Tectonic_setting==\"ARCHAEAN CRATONS\") %&gt;% \n  ggplot(aes(x=SiO2,y=TiO2,col=SubGroup))+\n  geom_point()+ \n  facet_grid(TASMiddlemostPlut~SubGroup)\n\n\n\n\n\n\n\nQual a distribuição das séries de granitos utilizando o diagrama P-Q (Debon & Fort, 1983, 1988)\nP = K - (Na + Ca)\nQ = Si/3 - (K + Na + 2*(Ca/3))\nP vs Q\n\nFazer gráfico de dispersão P vs. Q no banco dos granitos\n\n\nBD %&gt;% select(K=K2O,Na=Na2O,Si=SiO2,Ca=CaO,SubGroup) %&gt;%\n       mutate(P = K - (Na + Ca),\n              Q = Si/3 - (K + Na + 2*(Ca/3))) %&gt;%\n      ggplot(aes(P,Q,col=SubGroup))+\n      geom_point()+\n      geom_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCriar vários plots pela coluna SubGroup.\n\n\nBD %&gt;% select(K=K2O,Na=Na2O,Si=SiO2,Ca=CaO,SubGroup) %&gt;%\n       mutate(P = K - (Na + Ca),\n              Q = Si/3 - (K + Na + 2*(Ca/3))) %&gt;%\n       ggplot(aes(P,Q,col=SubGroup))+\n       geom_point()+\n       geom_smooth(method=\"lm\",col=\"black\")+\n       facet_wrap(~SubGroup)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nBD %&gt;%\n    select(SiO2, TiO2, MgO, Tectonic_setting) %&gt;%\n    ggplot(aes(x = Tectonic_setting, y = TiO2, fill = Tectonic_setting)) +\n    geom_boxplot()+\n    theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\nOu, versão violino\n\nBD %&gt;%\n    select(SiO2, TiO2, MgO, Tectonic_setting) %&gt;%\n    ggplot(aes(x = Tectonic_setting, y = TiO2, fill = Tectonic_setting)) +\n    geom_violin()+\n    theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\n\n\n\n\nBD %&gt;% select(SiO2,TiO2,MgO,Tectonic_setting) %&gt;%\n       ggplot(aes(x=SiO2))+\n       geom_histogram(bins=10)+\n       geom_vline(aes(xintercept=mean(SiO2)))+ # Adiciona média\n       geom_vline(col=\"red\",aes(xintercept=median(SiO2))) # adiciona mediana\n\n\n\nhisto_ploter &lt;- function(df,bins = 10) {\n  \n  df %&gt;%\n    ggplot(aes(x = SiO2) ) +\n    geom_histogram(bins = bins) +\n    geom_vline(aes(xintercept = mean(SiO2))) +\n    geom_vline(col = \"red\", aes(xintercept = median(SiO2)))\n}\n\nhisto_ploter(BD,5)\n\n\n\nplotly::ggplotly(histo_ploter(BD))\n\n\n\n\n\nHistograma pivotado\n\nBD %&gt;%\n  select(SiO2:P2O5) %&gt;%\n  mutate(across(.cols = SiO2:P2O5, as.numeric)) %&gt;%\n  pivot_longer(cols = SiO2:P2O5,\n               names_to = \"element\",\n               values_to = \"values\") %&gt;%\n  group_by(element) %&gt;%\n  mutate(media = median(values, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  ggplot(aes(values)) +\n  geom_histogram() +\n  geom_vline(col = \"red\", aes(xintercept = media)) +\n  facet_wrap( ~ element, scales = \"free\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nBD %&gt;%\n  select(SiO2, Tectonic_setting) %&gt;%\n  ggplot(aes(x = SiO2, fill = Tectonic_setting)) +\n  geom_density(bw=1, #tamanho da banda\n               alpha = 0.6) +\n  facet_wrap( ~ Tectonic_setting)+\n  labs(fill=\"Ambiente\\nTectônico\")\n\n\n\n\n\n\n\nsimples\n\nBD %&gt;% \n  filter(Tectonic_setting==\"OROGENIC BELT\") %&gt;% \n  select(Q = Quartz,\n              Ab = Albite,\n              An = Anorthite) %&gt;%\n  ggtern(aes(x=Ab, y=Q, z=An)) +\n  geom_point() +\n  ggtern::geom_confidence_tern() \n\n\n\n\nou pivotado\n\nBD %&gt;% \n  filter(Tectonic_setting==\"ARCHAEAN CRATONS\") %&gt;% \n  select(Q = Quartz,\n              Ab = Albite,\n              An = Anorthite,\n              SubGroup) %&gt;%\n  ggtern(aes(x= Ab, y=Q, z=An, col = SubGroup)) +\n  geom_point() +\n  facet_wrap( ~ SubGroup)\n\n\n\n\n\n\n\nHorizontal\n\nBD %&gt;% \n  reframe(n=n(),\n          .by = Tectonic_setting) %&gt;%\n  ggplot(aes(x=n,\n             y=fct_reorder(Tectonic_setting,n),\n             fill=Tectonic_setting))+\n  geom_bar(stat=\"identity\")+\n  labs(y=\"Ambientes tectônicos\") +\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n\n\n\n\nVertical\n\nBD %&gt;% \n  reframe(n=n(),\n          .by = Tectonic_setting) %&gt;%\n  ggplot(aes(x=fct_reorder(Tectonic_setting,desc(n)),\n             y=n,\n             fill=Tectonic_setting))+\n  geom_bar(stat=\"identity\")+\n  scale_x_discrete(guide = guide_axis(n.dodge = 4))+\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n\n\n\n\n\n\n\nSimples, calculando a média com reframe() + mean()\n\nBD %&gt;%\n  select(\n    Q = Quartz,\n    Ab = Albite,\n    An = Anorthite,\n    Tectonic = Tectonic_setting\n  ) %&gt;%\n  reframe(\n    Q = mean(Q, na.rm = TRUE),\n    Ab = mean(Ab, na.rm = TRUE),\n    An = mean(An, na.rm = TRUE)\n  ) %&gt;%\n  pivot_longer(cols = Q:An,\n               names_to = \"mineral\",\n               values_to = \"value\") %&gt;%\n  ggplot(aes(x = \"\", y = value, fill = mineral)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\")\n\n\n\n\nOu então, pivotado\n\nBD %&gt;%\n  select(\n    Q = Quartz,\n    Ab = Albite,\n    Or = Orthoclase,\n    Tectonic = Tectonic_setting\n  ) %&gt;%\n  drop_na(Q,Ab,Or) %&gt;% \n  reframe(\n    Q = mean(Q, na.rm = TRUE),\n    Ab = mean(Ab, na.rm = TRUE),\n    Or = mean(Or, na.rm = TRUE),\n              .by=Tectonic)  %&gt;%\n  group_by(Tectonic) %&gt;% \n  mutate(total=sum(Q,Ab,Or),\n         across(.cols=Q:Or,~.x*100/total)) %&gt;% \n  ungroup() %&gt;%       \n  pivot_longer(cols = Q:Or,\n               names_to = \"mineral\",\n               values_to = \"value\") %&gt;%\n  ggplot(aes(x = \"\", y = value, fill = mineral)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\")+\n  facet_wrap(~Tectonic)\n\n\n\n\n\n\n\nPara dados direcionais, vamos criar um banco de dados dummy:\n\n# Numero de amostras pra grupos A, B \nn_wr&lt;-c(450,450)\n\nn &lt;- 100\n\n# Gere ângulos aleatórios entre 0 e 2*pi (360 graus)\nangulos &lt;- runif(n, min = 0, max = 2 * pi)\n\n# Gere raios aleatórios (magnitude) com uma distribuição desejada\n# Neste exemplo, estamos usando uma distribuição normal (gaussiana)\nraios &lt;- rnorm(n, mean = 1, sd = 0.2)\n\n# Converta as coordenadas polares em coordenadas cartesianas\nx &lt;- raios * cos(angulos)\ny &lt;- raios * sin(angulos)\n\n# Crie um gráfico de dispersão dos dados\nplot(x, y, main = \"Dados Sintéticos Polares\", xlab = \"X\", ylab = \"Y\")\n\n\n\n#Parametros de simulação \nripples&lt;-50\nripples_SD&lt;-15\ndunas&lt;-150\ndunas_SD&lt;-5\n\n# Criar banco de dados\n\nPALEOCURRENTS&lt;-tibble(direction=c(rnorm(1:n_wr[1],mean=ripples,sd=ripples_SD),\n                                  rnorm(1:n_wr[2],mean=dunas,sd=dunas_SD)),\n                      facies=c(rep(\"WINDRIPPLES\",times=n_wr[1]),\n                               rep(\"DUNES\",times=n_wr[2])))\n\nPALEOCURRENTS\n\n# A tibble: 900 × 2\n   direction facies     \n       &lt;dbl&gt; &lt;chr&gt;      \n 1      47.2 WINDRIPPLES\n 2      40.8 WINDRIPPLES\n 3      57.7 WINDRIPPLES\n 4      57.2 WINDRIPPLES\n 5      42.0 WINDRIPPLES\n 6      20.9 WINDRIPPLES\n 7      63.9 WINDRIPPLES\n 8      40.6 WINDRIPPLES\n 9      69.8 WINDRIPPLES\n10      31.4 WINDRIPPLES\n# ℹ 890 more rows\n\n\nGrafico simples\n\nPALEOCURRENTS %&gt;% \n  ggplot(aes(x=direction,fill=facies))+\n  geom_histogram(color=\"white\",bins=30,breaks=seq(0, 360,by=10))+\n  coord_polar()+\n  scale_x_continuous(\"\", limits = c(0, 360), \n                     breaks = seq(0, 360,by=30), \n                     labels =  seq(0, 360,by=30))\n\n\n\n\n\n\n\n\nlvsd %&gt;%\n  filter(well == \"TG-227\") %&gt;%\n  pivot_longer(\n    cols = c(p_wave:s_wave, porosity, density),\n    names_to = \"var\",\n    values_to = \"value\"\n  ) %&gt;%\n  dplyr::mutate(var = factor(var, levels = c(\"porosity\", \"density\", \"p_wave\", \"s_wave\"))) %&gt;%\n  ggplot(aes(x = value, y = depth)) +\n  geom_rect(\n    mapping = aes(\n      ymin = 283.45,\n      ymax = 298.10,\n      xmin = -Inf,\n      xmax = Inf\n    ),\n    alpha = 0.5,\n    fill = \"gray\",\n    inherit.aes = FALSE\n  ) +\n  geom_rect(\n    mapping = aes(\n      ymin = 298.10,\n      ymax = 340,\n      xmin = -Inf,\n      xmax = Inf\n    ),\n    alpha = 0.3,\n    fill = \"lightyellow\",\n    inherit.aes = FALSE\n  ) +\n  geom_hline(\n    yintercept = c(283.45, 298.10, 340),\n    col = \"red\",\n    lty = 2,\n    alpha = 0.7\n  ) +\n  geom_lineh() +\n  geom_point() +\n  scale_y_reverse() +\n  facet_geochem_gridh(vars(var), scales = \"free\") +\n  labs(x = NULL,\n       y = \"Depth (m)\") +\n  theme_paleo()\n\n\n\n\n\n\n\nPara usar o R para mapas, algumas bibliotecas são fundamentais, como:\n\nsf: Cria objetos espaciais com sistemas de referência de coordenadas e diversas funções de geoprocessamento.\nterra e raster: Pacotes indicados para trabalhar com dados do tipo raster, cada um com suas particularidades.\n\nOutras bibliotecas são muito úteis para coisas em especifico\n\nchronosphere: Focado em dados de períodos geológicos distintos, com API para dados paleogeográficos e paleoclimáticos.\nmapview: Biblioteca para visualização rapida de dados espaciais de forma interativa\nggspatial, ggdal, tidyterra: Extensões do ggplot2 para manipulação e visualização de dados espaciais.\ngeobr: Fornece bases cartográficas brasileiras.\nvapour: Leitura eficiente de arquivos raster, como imagens de satélite e DEMs.\n\nA estrutura para mapas com ggplot é igual as anteriores. Vamos começar criando um banco de dados dummy com coordenadas dentro do brasil\n\ncoords_br &lt;- data.frame(\n  id=1:10,\n  latitude = runif(10, min = -33, max = 0), # Valores aleatórios para latitude\n  longitude = runif(10, min = -54, max = -40) # Valores aleatórios para longitude\n)\n\nVamos visualizar rapidamente com mapview, mas para isso, primeiro precisamos converter o dataframe coords_br para um dado espacial. Para isso, vamos usar a função st_as_sf() da biblioteca sf:\n\n# Coordinate Ref System WGS84 latlong = 4326\n# Funciona melhor no viewer\nlibrary(sf)\n\ncoords_br %&gt;% \n  st_as_sf(coords = c(\"longitude\",\"latitude\"), # informar nome colunas com X,Y\n           crs=4326) -&gt;BDS_SPATIAL\n\nBDS_SPATIAL %&gt;% # informar crs WGS84 / EPSG = european petroleum society...\n  mapview(.)\n\n\n\n\n\n\nVamos tilizar agora o pacote geobr para baixar dados cartograficos do brasil.\n\n# baixar shapefile estados brasileiros\nestados&lt;-geobr::read_state()\n\nUsing year 2010\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\nPOA&lt;-geobr::read_municipality() %&gt;% \n  filter(name_muni==\"POA\")\n\nUsing year 2010\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\n# filtrar para RS\nrs &lt;- estados %&gt;% \n  filter(abbrev_state==\"RS\")\n# criar coordenadas dummies dentro do RS\ncoords&lt;-st_sample(rs, 100) \n\nCriação do mapa com ggplot\n\nlibrary(ggspatial)\n\ninset&lt;-  ggplot()+\n  geom_sf(data = estados,fill=\"black\")+\n  geom_sf(data = rs,fill=\"red\")+\n  theme_void() +  # Remove elementos do gráfico\n  theme(plot.background = element_rect(fill = \"transparent\", colour = NA))  # Define o fundo como transparente\n\n\nRS&lt;-ggplot()+\n    geom_sf(data = rs,linewidth=1)+\n    geom_sf(data = coords,color=\"grey50\",size=2)+\n    geom_sf(data=POA,fill=\"red\")+\n    coord_sf(xlim=c(-48,-59),\n             ylim=c(-26,-34))+\n    ggspatial::annotation_north_arrow(location=\"tr\")+\n    ggspatial::annotation_scale(location=\"bl\")\n\n#Patchwork\n\nRS + inset_element(inset, left = 0, bottom = 0.7, right = 0.3, top = 1)\n\n\n\n\n\nlibrary(ggdal)\n\nggplot()+\n    ggdal::annotation_gdal(dsn = \"virtualearth\")+\n    geom_sf(data = rs,\n            linewidth=1.5,\n            fill=NA,col=\"white\")+\n    geom_sf(data = coords,color=\"red\",size=2)"
  },
  {
    "objectID": "aula_3.html#cores",
    "href": "aula_3.html#cores",
    "title": "3-Gráficos com ggplot2",
    "section": "",
    "text": "Cores podem inseridas através de:\n\nSeus nomes (“white”, “aliceblue”, “antiquewhite”). Cheque todas usando a função colors()\n\ncolors()\n\n  [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n  [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n  [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n [13] \"azure\"                \"azure1\"               \"azure2\"              \n [16] \"azure3\"               \"azure4\"               \"beige\"               \n [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n [22] \"bisque3\"              \"bisque4\"              \"black\"               \n [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n [28] \"blue2\"                \"blue3\"                \"blue4\"               \n [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n [34] \"brown2\"               \"brown3\"               \"brown4\"              \n [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n [58] \"coral1\"               \"coral2\"               \"coral3\"              \n [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n[100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n[103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n[106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n[109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n[112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n[115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n[118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n[121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n[124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n[127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n[130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n[133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n[136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n[139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n[142] \"gold\"                 \"gold1\"                \"gold2\"               \n[145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n[148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n[151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n[154] \"gray1\"                \"gray2\"                \"gray3\"               \n[157] \"gray4\"                \"gray5\"                \"gray6\"               \n[160] \"gray7\"                \"gray8\"                \"gray9\"               \n[163] \"gray10\"               \"gray11\"               \"gray12\"              \n[166] \"gray13\"               \"gray14\"               \"gray15\"              \n[169] \"gray16\"               \"gray17\"               \"gray18\"              \n[172] \"gray19\"               \"gray20\"               \"gray21\"              \n[175] \"gray22\"               \"gray23\"               \"gray24\"              \n[178] \"gray25\"               \"gray26\"               \"gray27\"              \n[181] \"gray28\"               \"gray29\"               \"gray30\"              \n[184] \"gray31\"               \"gray32\"               \"gray33\"              \n[187] \"gray34\"               \"gray35\"               \"gray36\"              \n[190] \"gray37\"               \"gray38\"               \"gray39\"              \n[193] \"gray40\"               \"gray41\"               \"gray42\"              \n[196] \"gray43\"               \"gray44\"               \"gray45\"              \n[199] \"gray46\"               \"gray47\"               \"gray48\"              \n[202] \"gray49\"               \"gray50\"               \"gray51\"              \n[205] \"gray52\"               \"gray53\"               \"gray54\"              \n[208] \"gray55\"               \"gray56\"               \"gray57\"              \n[211] \"gray58\"               \"gray59\"               \"gray60\"              \n[214] \"gray61\"               \"gray62\"               \"gray63\"              \n[217] \"gray64\"               \"gray65\"               \"gray66\"              \n[220] \"gray67\"               \"gray68\"               \"gray69\"              \n[223] \"gray70\"               \"gray71\"               \"gray72\"              \n[226] \"gray73\"               \"gray74\"               \"gray75\"              \n[229] \"gray76\"               \"gray77\"               \"gray78\"              \n[232] \"gray79\"               \"gray80\"               \"gray81\"              \n[235] \"gray82\"               \"gray83\"               \"gray84\"              \n[238] \"gray85\"               \"gray86\"               \"gray87\"              \n[241] \"gray88\"               \"gray89\"               \"gray90\"              \n[244] \"gray91\"               \"gray92\"               \"gray93\"              \n[247] \"gray94\"               \"gray95\"               \"gray96\"              \n[250] \"gray97\"               \"gray98\"               \"gray99\"              \n[253] \"gray100\"              \"green\"                \"green1\"              \n[256] \"green2\"               \"green3\"               \"green4\"              \n[259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n[262] \"grey1\"                \"grey2\"                \"grey3\"               \n[265] \"grey4\"                \"grey5\"                \"grey6\"               \n[268] \"grey7\"                \"grey8\"                \"grey9\"               \n[271] \"grey10\"               \"grey11\"               \"grey12\"              \n[274] \"grey13\"               \"grey14\"               \"grey15\"              \n[277] \"grey16\"               \"grey17\"               \"grey18\"              \n[280] \"grey19\"               \"grey20\"               \"grey21\"              \n[283] \"grey22\"               \"grey23\"               \"grey24\"              \n[286] \"grey25\"               \"grey26\"               \"grey27\"              \n[289] \"grey28\"               \"grey29\"               \"grey30\"              \n[292] \"grey31\"               \"grey32\"               \"grey33\"              \n[295] \"grey34\"               \"grey35\"               \"grey36\"              \n[298] \"grey37\"               \"grey38\"               \"grey39\"              \n[301] \"grey40\"               \"grey41\"               \"grey42\"              \n[304] \"grey43\"               \"grey44\"               \"grey45\"              \n[307] \"grey46\"               \"grey47\"               \"grey48\"              \n[310] \"grey49\"               \"grey50\"               \"grey51\"              \n[313] \"grey52\"               \"grey53\"               \"grey54\"              \n[316] \"grey55\"               \"grey56\"               \"grey57\"              \n[319] \"grey58\"               \"grey59\"               \"grey60\"              \n[322] \"grey61\"               \"grey62\"               \"grey63\"              \n[325] \"grey64\"               \"grey65\"               \"grey66\"              \n[328] \"grey67\"               \"grey68\"               \"grey69\"              \n[331] \"grey70\"               \"grey71\"               \"grey72\"              \n[334] \"grey73\"               \"grey74\"               \"grey75\"              \n[337] \"grey76\"               \"grey77\"               \"grey78\"              \n[340] \"grey79\"               \"grey80\"               \"grey81\"              \n[343] \"grey82\"               \"grey83\"               \"grey84\"              \n[346] \"grey85\"               \"grey86\"               \"grey87\"              \n[349] \"grey88\"               \"grey89\"               \"grey90\"              \n[352] \"grey91\"               \"grey92\"               \"grey93\"              \n[355] \"grey94\"               \"grey95\"               \"grey96\"              \n[358] \"grey97\"               \"grey98\"               \"grey99\"              \n[361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n[364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n[367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n[370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n[373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n[376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n[379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n[382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n[385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n[388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n[391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n[394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n[397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n[400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n[403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n[406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n[409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n[412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n[415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n[418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n[421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n[424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n[427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n[430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n[433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n[436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n[439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n[442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n[445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n[448] \"limegreen\"            \"linen\"                \"magenta\"             \n[451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n[454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n[457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n[460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n[463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n[466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n[469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n[472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n[475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n[478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n[481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n[484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n[487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n[490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n[493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n[496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n[499] \"orange1\"              \"orange2\"              \"orange3\"             \n[502] \"orange4\"              \"orangered\"            \"orangered1\"          \n[505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n[508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n[511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n[514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n[517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n[520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n[523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n[526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n[529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n[532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n[535] \"peru\"                 \"pink\"                 \"pink1\"               \n[538] \"pink2\"                \"pink3\"                \"pink4\"               \n[541] \"plum\"                 \"plum1\"                \"plum2\"               \n[544] \"plum3\"                \"plum4\"                \"powderblue\"          \n[547] \"purple\"               \"purple1\"              \"purple2\"             \n[550] \"purple3\"              \"purple4\"              \"red\"                 \n[553] \"red1\"                 \"red2\"                 \"red3\"                \n[556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n[559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n[562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n[565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n[568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n[571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n[574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n[577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n[580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n[583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n[586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n[589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n[592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n[595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n[598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n[601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n[604] \"slategrey\"            \"snow\"                 \"snow1\"               \n[607] \"snow2\"                \"snow3\"                \"snow4\"               \n[610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n[613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n[616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n[619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n[622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n[625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n[628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n[631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n[634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n[637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n[640] \"violet\"               \"violetred\"            \"violetred1\"          \n[643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n[646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n[649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n[652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n[655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"         \n\n\nPor seus códigos\n\npar(mfrow=c(1,2))\n\n# Hexadecimal\nplot(1:10, col = \"#FF5733\", main=\"Hexadecimal\")\n\n# RGB\nplot(1:10, col = rgb(255, 87, 51, maxColorValue = 255),main=\"RGB\")\n\n\n\npar(mfrow=c(1,1))\n\nPaletas prontas de cores- as mais utilizadas são Viridis e rColorBrewer\n\nAs paletas de cores são em geral convergentes, divergentes ou categóricas. Outra subdivisão são valores continuos ou discretos.\n\n\n\n\nUsar scale_*_viridis_b para dados continuos separados em grupos (bins). * representa ou color ou fill.\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_b(option = \"magma\",n.breaks=3) +\n  labs(title = \"Viridis - Magma (A)\")\n\n\n\n\n\n\n\nUsar scale_*_viridis_c para dados continuos. * representa ou color ou fill : color para as linhas (no caso o ponto) e fill para colunas.\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"magma\") +\n  labs(title = \"Viridis - Magma (A)\")-&gt;A\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"inferno\") +\n  labs(title = \"Viridis - Inferno (B)\")-&gt;B\n\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"plasma\") +\n  labs(title = \"Viridis - Plasma (C)\")-&gt;C\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"viridis\") +\n  labs(title = \"Viridis - Viridis (D)\")-&gt;D\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"cividis\") +\n  labs(title = \"Viridis - Cividis (E)\")-&gt;E\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"rocket\") +\n  labs(title = \"Viridis - rocket (F)\")-&gt;F1\n\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"mako\") +\n  labs(title = \"Viridis - Mako (G)\")-&gt;G\n\nBD %&gt;% \n  ggplot(aes(x=SiO2,\n             y=TiO2,\n             color=Al2O3))+\n  geom_point()+\n  scale_color_viridis_c(option = \"turbo\") +\n  labs(title = \"Viridis - Turbo(H)\")-&gt;H\n\n\nA+B+C+D+E+F1+G+H+\nplot_layout(ncol = 2)\n\n\n\n\n\n\n\nUsar scale_*_viridis_dpara dados discretos. * representa ou color ou fill : color para as linhas (no caso o ponto) e fill para colunas.\n\nBD %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,TiO2),\n             y=TiO2,\n             fill=fct_reorder(Tectonic_setting,TiO2)))+\n  geom_boxplot()+\n  scale_fill_viridis_d(option = \"magma\") +\n  labs(title = \"Viridis - Magma (A)\",\n       fill=\"Ambiente Tectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank()) # retirar ticks escala\n\n\n\n\n\n\n\n\nPaleta de cores “color-blind friendly” facilitando visualização universal de gráficos. O conjunto completo de cores pode ser obtido com a função display.brewer.all().\n\ndisplay.brewer.all()\n\n\n\n\nA biblioteca colorbrewer divide suas pallete (conjunto de cores) em sequencial, divergente e categórico, usando a função scale_*_brewer() e o parâmetro pallete para determinar pallete.\n\nBD %&gt;% \n   drop_na(CaO,Na2O,MgO) %&gt;% \n   ggplot(aes(x=CaO,\n              y=Na2O,\n              colour=MgO))+\n  geom_point()+\n  scale_color_distiller(palette = \"Greens\",direction = 1) +\n  labs(title = \"Sequencial Greens\") -&gt; A\n\nBD %&gt;% \n   drop_na(CaO,Na2O,MgO) %&gt;% \n   ggplot(aes(x=CaO,\n              y=Na2O,\n              colour=MgO))+\n  geom_point()+\n  scale_color_distiller(palette = \"YlOrRd\",direction = 1) +\n  labs(title = \"Sequencial YlOrRd\") -&gt; B\n\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,Cu),\n             y=Cu,\n             fill=fct_reorder(Tectonic_setting,Cu)))+\n  geom_boxplot()+\n  scale_fill_brewer(palette = \"Set1\",direction = 1) +\n  scale_y_log10()+\n  labs(title = \"Categórico Set1\",\n       fill=\"Ambiente\\nTectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n          axis.text.x=element_blank(), # retirar texto escala\n          axis.ticks.x=element_blank())-&gt;C # retirar ticks escala\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=fct_reorder(Tectonic_setting,Cu),\n             y=Cu,\n             fill=fct_reorder(Tectonic_setting,Cu)))+\n  geom_violin()+\n  scale_fill_brewer(palette = \"Pastel1\",direction = 1) +\n  scale_y_log10()+\n  labs(title = \"Categórico Pastel1\",\n       fill=\"Ambiente\\nTectônico\")+\n  theme(axis.title.x=element_blank(), # retirar nome escala\n        axis.text.x=element_blank(), # retirar texto escala\n        axis.ticks.x=element_blank())-&gt;D # retirar ticks escala\n\nBD %&gt;% \n  drop_na(Cu) %&gt;% \n  ggplot(aes(x=SiO2,y=Al2O3,colour=log10(Cu)))+\n  geom_point()+\n  scale_colour_distiller(palette = \"Spectral\") +\n  labs(title = \"Divergente Spectral\",\n       fill=\"log10\\nCobre\")-&gt;E\n\nBD %&gt;% \n  drop_na(FeOt) %&gt;% \n  filter(FeOt&gt;0) %&gt;% \n  ggplot(aes(x=SiO2,y=Al2O3,colour=FeOt))+\n  geom_point()+\n  scale_colour_distiller(palette = \"RdBu\") +\n  labs(title = \"Divergente RdBu\",\n       fill=\"Ferro\\ntotal\")-&gt;F1\n\nA+B+C+D+E+F1+plot_layout(ncol=2)\n\n\n\n# & theme( legend.title = element_text(size =10),\n#                                          legend.text = element_text(size = 8),\n#                                          legend.key.size = unit(4, \"cm\"),\n#                                          legend.key.height = unit(1, \"cm\"),  \n#                                          legend.key.width = unit(1, \"cm\"),\n#                                          axis.text.y=element_text(size=3),\n#                                          plot.title=element_text(size=10)\n#                                          )\n\n\n\n\nNo banco de dados\n\nBD %&gt;% \n  select(Tectonic_setting,TiO2,Na2O) %&gt;% \n # \n  mutate(colors=case_when(\n    Tectonic_setting==\"CONVERGENT MARGIN\"~\"red\",\n    Tectonic_setting==\"ARCHAEAN CRATONS\"~\"blue\",\n    Tectonic_setting==\"OROGENIC BELT\"~\"yellow\",\n    TRUE~\"black\"\n  )) %&gt;% \n  ggplot(aes(x=TiO2,y=Na2O,color=colors))+\n  geom_point()+\n  scale_color_identity() \n\n\n\n\nVetor\n\ncols&lt;-c(\"red\",\"blue\",\"yellow\")\n\nBD %&gt;% \n  filter(Tectonic_setting %in% c(\"CONVERGENT MARGIN\", \"ARCHAEAN CRATONS\", \"OROGENIC BELT\") ) %&gt;% \nggplot(aes(x=TiO2,y=Na2O,color=Tectonic_setting))+\n  geom_point()+\n  scale_color_manual(values=cols) \n\n\n\n\nManuais\n\nBD %&gt;% \n  filter(Tectonic_setting %in% c(\"CONVERGENT MARGIN\", \"ARCHAEAN CRATONS\", \"OROGENIC BELT\",\"RIFT VOLCANICS\") ) %&gt;% \nggplot(aes(x=TiO2,y=Na2O,color=Tectonic_setting))+\n  geom_point()+\n  scale_color_manual(values=c(\"red\",\"blue\",\"yellow\",\"black\"))"
  },
  {
    "objectID": "aula_1.html",
    "href": "aula_1.html",
    "title": "Aula 1 - Introdução ao R",
    "section": "",
    "text": "Dr. Gabriel Bertolini\n2º semestre 2023 - PPGGEO UFRGS\nOficina de programação\nAula de introdução ao R, incluindo variaveis, objetos, funções."
  },
  {
    "objectID": "aula_1.html#atalhos",
    "href": "aula_1.html#atalhos",
    "title": "Aula 1 - Introdução ao R",
    "section": "Atalhos",
    "text": "Atalhos\n\nAlt + - (hífen): cria o símbolo de atribuição “&lt;-” no seu script.\nCtrl + Shift + M: cria o operador %&gt;% (pipe) do pacote dplyr no script.\nCtrl + Shift + C: Comenta ou descomenta a linha de código ou a seleção atual.\nCtrl + Shift + K: Compilar em PDF no Markdown.\nCtrl + Shift + H: opção para alterar o diretório de trabalho\nCtrl + Shift + R: Insere uma nova seção de código.\nCtrl + Shift + N: abre um novo script\nCtrl + Alt + R: executa o código inteiro\nCtrl + Alt + E: executa o código a partir da linha atual\nCtrl + Alt + P: executa o próximo chunk\nCtrl + L: limpar o console\nCtrl + F: localizar e substituir\nEsc: interrompe o comando atualmente em execução."
  },
  {
    "objectID": "aula_1.html#criar-variavéis",
    "href": "aula_1.html#criar-variavéis",
    "title": "Aula 1 - Introdução ao R",
    "section": "Criar variavéis",
    "text": "Criar variavéis\n\nA&lt;-1 \n# Criar variavel\n\nA=1 \n# Criar variavel\n\nmyNumber&lt;-5 \n#Camel case - prática de escrever palavras ou frase, onde cada palavra é iniciada com maiúsculas e unidas sem espaços\n\nmyNumber = 5\n\nmyNumber\n\n[1] 5\n\nmyNumber &lt;- 7.1\n\ncalculo &lt;- 5 + (3 * 5 / 2)\n\nmyNumber * calculo\n\n[1] 88.75\n\n\nTipos e atribuição de objetos\n\nnumeric ou double - decimal\ninteger - inteiro\nfactor - categórica\n“character” - texto\nboleano - binário\n\n\nmyInteger &lt;- as.integer(myNumber) \n# transformar objeto em inteiro\n\nmyInteger &lt;- is.integer(myNumber) \n# perguntar se o objeto é inteiro\n\nmyInteger\n\n[1] FALSE\n\nmyWord = \"7\" \n\n#erro\n#myWord * 2\n\nmyWord &lt;- \"geologia\" \n#string- texto puro\n\nmyWord\n\n[1] \"geologia\"\n\nis.character(myWord)\n\n[1] TRUE\n\nmySentence &lt;- \"esta é a minha frase\"\n\nmySentence\n\n[1] \"esta é a minha frase\"\n\nmyFactor &lt;- factor(myWord) \n#valor categórica, com vários níveis\n\nmyFactor\n\n[1] geologia\nLevels: geologia\n\nis.factor(myFactor)\n\n[1] TRUE\n\n#o R também trabalha com classes lógicas, TRUE or FALSE\n\n#variável boleana (binária, lógica)\n\nmyTRUE &lt;- TRUE\n\n4 == 4 \n\n[1] TRUE\n\n#4 é igual a 4?\n\na&lt;-4\n\na==4\n\n[1] TRUE"
  },
  {
    "objectID": "aula_1.html#testando-tipo-de-variável",
    "href": "aula_1.html#testando-tipo-de-variável",
    "title": "Aula 1 - Introdução ao R",
    "section": "Testando tipo de variável",
    "text": "Testando tipo de variável\n\nclass(myNumber) \n\n[1] \"numeric\"\n\n#variável numérica - qualquer número DECIMAL\n\nclass(myInteger)\n\n[1] \"logical\"\n\n#variável numérica - número INTEIRO\n\nclass(myWord) \n\n[1] \"character\"\n\n#variável caracter\n\nclass(myFactor)\n\n[1] \"factor\"\n\n#fator\n\nclass(mySentence)\n\n[1] \"character\"\n\nclass(myTRUE)\n\n[1] \"logical\"\n\n#variável lógica"
  },
  {
    "objectID": "aula_1.html#operadores-lógicos",
    "href": "aula_1.html#operadores-lógicos",
    "title": "Aula 1 - Introdução ao R",
    "section": "Operadores lógicos",
    "text": "Operadores lógicos\n\n1&gt;0 \n\n[1] TRUE\n\n# Maior\n\n2&gt;=2 \n\n[1] TRUE\n\n#Maior igual\n\n1&lt;2 \n\n[1] TRUE\n\n# Menor\n\n1&lt;=2 \n\n[1] TRUE\n\n# Menor igual\n\n2==2 \n\n[1] TRUE\n\n# igual\n\n1!=2 \n\n[1] TRUE\n\n# diferente\n\nA&lt;-data.frame(2,3,2,3)\nA$X2 \n\n[1] 2\n\n# Indexador de coluna\n\nifelse(2&gt;1|1&gt;3,\"CERTO\",\"ERRADO\") \n\n[1] \"CERTO\"\n\n# | significa OU\n\nifelse(2&lt;1 &1&gt;3,\"CERTO\",\"ERRADO\") \n\n[1] \"ERRADO\"\n\n# & E\n\nA&lt;-c(\"A\",\"B\",\"C\",\"D\",\"E\")\nc(\"A\",\"B\") %in% A \n\n[1] TRUE TRUE\n\n# dentro de um vetor"
  },
  {
    "objectID": "aula_1.html#vetor",
    "href": "aula_1.html#vetor",
    "title": "Aula 1 - Introdução ao R",
    "section": "Vetor",
    "text": "Vetor\nEstrutura mais simples de dados, consiste uma série de valores concatenados de 1 a n. Estes valores podem ser quaisquer tipo de variaveis com double, character e bolean.\n\nc(\"valores\",\"quaisquer\",999,pi,TRUE,1e-01) \n\n[1] \"valores\"          \"quaisquer\"        \"999\"              \"3.14159265358979\"\n[5] \"TRUE\"             \"0.1\"             \n\n# Função c() serve para concatenar\n\nmyNumbers &lt;- c(1, 2, 3, 4, 5) \n#vetor - forma de concatenar uma serie de dados\n\nmyNumbers2 &lt;- 1:5\n\nmyNumbers3 &lt;- seq(from=1,to=10,by=0.5)\n\nmyNumbers3[3]\n\n[1] 2\n\nmyNumbers3[myNumbers3 &gt; 3]\n\n [1]  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0  7.5  8.0  8.5  9.0  9.5 10.0\n\nmyNumbers[myNumbers &gt;= 3]\n\n[1] 3 4 5\n\nmyNumbers[myNumbers!= 3]\n\n[1] 1 2 4 5\n\nmyNumbers3[myNumbers3 &gt; 3]\n\n [1]  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0  7.5  8.0  8.5  9.0  9.5 10.0\n\nmyWords = c(\"geoquímica\", \"estrutural\", \"estratigrafia\") \n#strings - fator\n\nmyWords\n\n[1] \"geoquímica\"    \"estrutural\"    \"estratigrafia\"\n\nmyWords[3]\n\n[1] \"estratigrafia\"\n\nmyWords[4]\n\n[1] NA\n\n\n\nOperação com vetores\n\nmeuVetor &lt;- seq(85, 274, by = pi)\n\n#quanto menor o desvio padrão, mais homogênea é a amostra\n\nlength(meuVetor)\n\n[1] 61\n\n(n &lt;- length(meuVetor))\n\n[1] 61\n\ndp &lt;- sd(meuVetor)\n#indica o grau de variação de um conjunto de elementos\n\nSE &lt;- dp / sqrt(n)\n\nSE \n\n[1] 7.140935\n\n#medida de variação de uma média amostral\n#em relação à média da população"
  },
  {
    "objectID": "aula_1.html#matriz",
    "href": "aula_1.html#matriz",
    "title": "Aula 1 - Introdução ao R",
    "section": "Matriz",
    "text": "Matriz\nForma mais simples de dado bidemensional (colunas e linhas). As colunas e linhas são identificadas por sua posição.\n\nmyMatrix &lt;- matrix(1:6,nrow=3) \n\nmyMatrix\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\ny &lt;- seq(1, 7, by = 1)\n\nmyMatrix2 &lt;- matrix(y, nrow = 3, ncol = 2)\n\nWarning in matrix(y, nrow = 3, ncol = 2): comprimento dos dados [7] não é um\nsubmúltiplo ou múltiplo do número de linhas [3]\n\nmyMatrix2\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\n# Juntando vetores para formar matriz\n\nx &lt;- 1:4\n\ny &lt;- 10:13\n\ncbind (x,y) \n\n     x  y\n[1,] 1 10\n[2,] 2 11\n[3,] 3 12\n[4,] 4 13\n\n#cbind = Column Bind\n\n#as colunas devem ter o mesmo número de linhas\n\nrbind(x, y) \n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny   10   11   12   13\n\n#rbind = Row Bind\n\nmatriz &lt;- cbind(x, y)\n\nmatriz \n\n     x  y\n[1,] 1 10\n[2,] 2 11\n[3,] 3 12\n[4,] 4 13\n\n#matrix matemática\n\n#indexação\n\nmyMatrix[,1] \n\n[1] 1 2 3\n\n#coluna 1\n\nmyMatrix[1,] \n\n[1] 1 4\n\n#linha 1\n\nmyMatrix[2,2]\n\n[1] 5\n\n# Linhas 2 e coluna 2"
  },
  {
    "objectID": "aula_1.html#dataframe",
    "href": "aula_1.html#dataframe",
    "title": "Aula 1 - Introdução ao R",
    "section": "Dataframe",
    "text": "Dataframe\n\ndf &lt;- as.data.frame(matriz)\n\ndf \n\n  x  y\n1 1 10\n2 2 11\n3 3 12\n4 4 13\n\n#banco de dados\n\nclass(matriz)\n\n[1] \"matrix\" \"array\" \n\nclass(df)\n\n[1] \"data.frame\"\n\nstr(df) \n\n'data.frame':   4 obs. of  2 variables:\n $ x: int  1 2 3 4\n $ y: int  10 11 12 13\n\n# Estruturas\n\nlength(df)\n\n[1] 2\n\n# Indexação\n\ndf$y\n\n[1] 10 11 12 13\n\nlength(df$y)\n\n[1] 4\n\nx &lt;- 1:4\n\ny &lt;- 10:13\n\nDF2&lt;-as.data.frame(cbind (x,y))\n\nDF2$y\n\n[1] 10 11 12 13"
  },
  {
    "objectID": "aula_1.html#lista",
    "href": "aula_1.html#lista",
    "title": "Aula 1 - Introdução ao R",
    "section": "Lista",
    "text": "Lista\n\n#matrizes empilhadas\nx &lt;- 1:4\n\ny &lt;- 10:13\n\nz &lt;- 2:7\n\nmyList &lt;- list(x, y, z)\n\nmyList[[2]]\n\n[1] 10 11 12 13\n\nmyList[[3]][2]\n\n[1] 3\n\nmyLists &lt;- list(matriz,z)\n\n# Indexação\nmyLists[[1]][3,2]\n\n y \n12"
  }
]